"use strict";(self.webpackChunkav_docusaurus_classic=self.webpackChunkav_docusaurus_classic||[]).push([[4416],{8554:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"frontend/angular/design-patterns/structural-patterns/facade","title":"Facade","description":"Use case: Providing a simplified interface to a complex subsystem.","source":"@site/docs/frontend/angular/design-patterns/structural-patterns/facade.md","sourceDirName":"frontend/angular/design-patterns/structural-patterns","slug":"/frontend/angular/design-patterns/structural-patterns/facade","permalink":"/av-docs/docs/frontend/angular/design-patterns/structural-patterns/facade","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/frontend/angular/design-patterns/structural-patterns/facade.md","tags":[],"version":"current","frontMatter":{},"sidebar":"frontendSidebar","previous":{"title":"Decorator","permalink":"/av-docs/docs/frontend/angular/design-patterns/structural-patterns/decorator"},"next":{"title":"Flyweight","permalink":"/av-docs/docs/frontend/angular/design-patterns/structural-patterns/flyweight"}}');var s=t(4848),a=t(8453);const i={},o="Facade",c={},d=[];function l(e){const n={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"facade",children:"Facade"})}),"\n",(0,s.jsx)(n.p,{children:"Use case: Providing a simplified interface to a complex subsystem."}),"\n",(0,s.jsx)(n.p,{children:"Example: Creating a service that wraps multiple HTTP calls into a single method."}),"\n",(0,s.jsx)(n.p,{children:"How to find: Look for services that aggregate operations from multiple sources or APIs."}),"\n",(0,s.jsx)(n.p,{children:"Explanation:"}),"\n",(0,s.jsx)(n.p,{children:"The Facade pattern provides a unified interface to a set of interfaces in a subsystem. It defines a higher-level interface that makes the subsystem easier to use."}),"\n",(0,s.jsx)(n.p,{children:"Example Code:"}),"\n",(0,s.jsx)(n.p,{children:"Suppose you have multiple APIs to fetch user data, orders, and notifications."}),"\n",(0,s.jsx)(n.p,{children:"Individual Services:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// user.service.ts\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  getUserDetails() { /* ... */ }\n}\n\n// order.service.ts\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderService {\n  getUserOrders() { /* ... */ }\n}\n\n// notification.service.ts\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationService {\n  getUserNotifications() { /* ... */ }\n}\n\n// dashboard.service.ts\n@Injectable({\n  providedIn: 'root',\n})\nexport class DashboardService {\n  constructor(\n    private userService: UserService,\n    private orderService: OrderService,\n    private notificationService: NotificationService\n  ) {}\n\n  getDashboardData() {\n    return forkJoin({\n      user: this.userService.getUserDetails(),\n      orders: this.orderService.getUserOrders(),\n      notifications: this.notificationService.getUserNotifications(),\n    });\n  }\n}\n\n// dashboard.component.ts\n@Component({\n  selector: 'app-dashboard',\n  template: `<div *ngIf=\"data\">\n               \x3c!-- Display data --\x3e\n             </div>`,\n})\nexport class DashboardComponent implements OnInit {\n  data: any;\n\n  constructor(private dashboardService: DashboardService) {}\n\n  ngOnInit() {\n    this.dashboardService.getDashboardData().subscribe((res) => {\n      this.data = res;\n    });\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"DashboardService acts as a facade, simplifying access to multiple services."}),"\n",(0,s.jsx)(n.li,{children:"The component interacts with DashboardService rather than multiple individual services."}),"\n",(0,s.jsx)(n.li,{children:"This simplifies the component code and reduces coupling."}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var r=t(6540);const s={},a=r.createContext(s);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);