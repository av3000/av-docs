"use strict";(self.webpackChunkav_docusaurus_classic=self.webpackChunkav_docusaurus_classic||[]).push([[4620],{305:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"frontend/styling/best-practices/index","title":"CSS Best Practices","description":"Creating maintainable, scalable, and efficient CSS requires following established best practices. This guide outlines key principles and techniques to improve your CSS codebase.","source":"@site/docs/frontend/styling/best-practices/index.md","sourceDirName":"frontend/styling/best-practices","slug":"/frontend/styling/best-practices/","permalink":"/av-docs/docs/frontend/styling/best-practices/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/frontend/styling/best-practices/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"frontendSidebar","previous":{"title":"Intro","permalink":"/av-docs/docs/frontend/styling/"},"next":{"title":"Atomic CSS","permalink":"/av-docs/docs/frontend/styling/architecture/atomic-css"}}');var l=i(4848),r=i(8453);const t={},o="CSS Best Practices",a={},c=[{value:"Organization",id:"organization",level:2},{value:"File Organization",id:"file-organization",level:3},{value:"Code Organization Within Files",id:"code-organization-within-files",level:3},{value:"Naming Conventions",id:"naming-conventions",level:2},{value:"Class Naming",id:"class-naming",level:3},{value:"BEM (Block, Element, Modifier)",id:"bem-block-element-modifier",level:4},{value:"SMACSS (Scalable and Modular Architecture for CSS)",id:"smacss-scalable-and-modular-architecture-for-css",level:4},{value:"Namespacing",id:"namespacing",level:4},{value:"Naming Best Practices",id:"naming-best-practices",level:3},{value:"Maintainability",id:"maintainability",level:2},{value:"DRY (Don&#39;t Repeat Yourself)",id:"dry-dont-repeat-yourself",level:3},{value:"Avoid Magic Numbers",id:"avoid-magic-numbers",level:3},{value:"Responsive Design Considerations",id:"responsive-design-considerations",level:3},{value:"Performance",id:"performance",level:2},{value:"Selector Efficiency",id:"selector-efficiency",level:3},{value:"Reduce Repaints and Reflows",id:"reduce-repaints-and-reflows",level:3},{value:"Critical CSS",id:"critical-css",level:3},{value:"File Size Optimization",id:"file-size-optimization",level:3},{value:"Accessibility",id:"accessibility",level:2},{value:"Color and Contrast",id:"color-and-contrast",level:3},{value:"Text Sizing",id:"text-sizing",level:3},{value:"Focus Styles",id:"focus-styles",level:3},{value:"Reduced Motion",id:"reduced-motion",level:3},{value:"Browser Compatibility",id:"browser-compatibility",level:2},{value:"Vendor Prefixes",id:"vendor-prefixes",level:3},{value:"Feature Detection",id:"feature-detection",level:3},{value:"CSS Variables with Fallbacks",id:"css-variables-with-fallbacks",level:3},{value:"Documentation",id:"documentation",level:2},{value:"Code Comments",id:"code-comments",level:3},{value:"Style Guide",id:"style-guide",level:3},{value:"Tools and Workflows",id:"tools-and-workflows",level:2},{value:"CSS Linting",id:"css-linting",level:3},{value:"Formatting",id:"formatting",level:3},{value:"Version Control",id:"version-control",level:3},{value:"Common Pitfalls to Avoid",id:"common-pitfalls-to-avoid",level:2},{value:"Resources",id:"resources",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"css-best-practices",children:"CSS Best Practices"})}),"\n",(0,l.jsx)(n.p,{children:"Creating maintainable, scalable, and efficient CSS requires following established best practices. This guide outlines key principles and techniques to improve your CSS codebase."}),"\n",(0,l.jsx)(n.h2,{id:"organization",children:"Organization"}),"\n",(0,l.jsx)(n.h3,{id:"file-organization",children:"File Organization"}),"\n",(0,l.jsx)(n.p,{children:"Structure your CSS files logically to enhance maintainability:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"styles/\n\u251c\u2500\u2500 base/             # Reset, typography, etc.\n\u2502   \u251c\u2500\u2500 _reset.scss\n\u2502   \u2514\u2500\u2500 _typography.scss\n\u251c\u2500\u2500 components/       # Reusable components\n\u2502   \u251c\u2500\u2500 _buttons.scss\n\u2502   \u2514\u2500\u2500 _forms.scss\n\u251c\u2500\u2500 layout/           # Major layout components\n\u2502   \u251c\u2500\u2500 _header.scss\n\u2502   \u2514\u2500\u2500 _footer.scss\n\u251c\u2500\u2500 utils/            # Mixins, functions, variables\n\u2502   \u251c\u2500\u2500 _variables.scss\n\u2502   \u2514\u2500\u2500 _mixins.scss\n\u2514\u2500\u2500 main.scss         # Main file that imports all others\n"})}),"\n",(0,l.jsx)(n.p,{children:"Key principles:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Group related styles together"}),"\n",(0,l.jsx)(n.li,{children:"Use a consistent naming convention for files"}),"\n",(0,l.jsx)(n.li,{children:"Separate concerns (layout, components, utilities)"}),"\n",(0,l.jsx)(n.li,{children:"Keep files small and focused"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"code-organization-within-files",children:"Code Organization Within Files"}),"\n",(0,l.jsx)(n.p,{children:"Organize properties consistently within rule sets:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-css",children:".element {\n  /* Positioning */\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  /* Display & Box Model */\n  display: flex;\n  width: 100px;\n  padding: 10px;\n\n  /* Typography */\n  font-family: sans-serif;\n  font-size: 16px;\n\n  /* Visual */\n  background-color: #fff;\n  border: 1px solid #ddd;\n\n  /* Misc */\n  cursor: pointer;\n}\n"})}),"\n",(0,l.jsx)(n.p,{children:"Add meaningful comments to explain complex code or hacks."}),"\n",(0,l.jsx)(n.h2,{id:"naming-conventions",children:"Naming Conventions"}),"\n",(0,l.jsx)(n.h3,{id:"class-naming",children:"Class Naming"}),"\n",(0,l.jsx)(n.p,{children:"Choose a naming convention and apply it consistently:"}),"\n",(0,l.jsx)(n.h4,{id:"bem-block-element-modifier",children:"BEM (Block, Element, Modifier)"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-css",children:".card {\n}\n.card__title {\n}\n.card--featured {\n}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"smacss-scalable-and-modular-architecture-for-css",children:"SMACSS (Scalable and Modular Architecture for CSS)"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-css",children:".l-header {\n} /* Layout */\n.btn {\n} /* Module */\n.is-active {\n} /* State */\n"})}),"\n",(0,l.jsx)(n.h4,{id:"namespacing",children:"Namespacing"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-css",children:".c-card {\n} /* Component */\n.u-hidden {\n} /* Utility */\n.js-toggle {\n} /* JavaScript hook */\n"})}),"\n",(0,l.jsx)(n.h3,{id:"naming-best-practices",children:"Naming Best Practices"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Be descriptive"}),": Use names that describe purpose, not appearance"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-css",children:"/* Good */\n.alert-message {\n}\n\n/* Bad */\n.red-box {\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Be consistent"}),": Use the same conventions throughout the project"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Avoid excessive abbreviations"}),": Prioritize clarity over brevity"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Keep selectors simple"}),": Avoid deep nesting and overqualification"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Use hyphens as separators"}),": For multi-word class names (e.g., ",(0,l.jsx)(n.code,{children:".user-profile"}),")"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"maintainability",children:"Maintainability"}),"\n",(0,l.jsx)(n.h3,{id:"dry-dont-repeat-yourself",children:"DRY (Don't Repeat Yourself)"}),"\n",(0,l.jsx)(n.p,{children:"Avoid repetition to make updates easier:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scss",children:"// Bad\n.button-primary {\n  padding: 10px 15px;\n  border-radius: 4px;\n  background-color: blue;\n}\n\n.button-secondary {\n  padding: 10px 15px;\n  border-radius: 4px;\n  background-color: gray;\n}\n\n// Good\n.button {\n  padding: 10px 15px;\n  border-radius: 4px;\n}\n\n.button-primary {\n  @extend .button;\n  background-color: blue;\n}\n\n.button-secondary {\n  @extend .button;\n  background-color: gray;\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"avoid-magic-numbers",children:"Avoid Magic Numbers"}),"\n",(0,l.jsx)(n.p,{children:"Use variables for repeated values and document unusual values:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-css",children:"/* Bad */\n.element {\n  top: 37px;\n}\n\n/* Good */\n:root {\n  --header-height: 60px;\n  --spacing-medium: 16px;\n}\n\n.element {\n  /* Position below header with some spacing */\n  top: calc(\n    var(--header-height) + var(--spacing-medium) + 1px\n  ); /* +1px for border */\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"responsive-design-considerations",children:"Responsive Design Considerations"}),"\n",(0,l.jsx)(n.p,{children:"Make maintenance easier by using consistent breakpoints:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scss",children:'// Define breakpoints\n$breakpoints: (\n  "sm": 576px,\n  "md": 768px,\n  "lg": 992px,\n  "xl": 1200px,\n);\n\n// Create mixin\n@mixin respond-to($breakpoint) {\n  $value: map-get($breakpoints, $breakpoint);\n\n  @if $value {\n    @media (min-width: $value) {\n      @content;\n    }\n  }\n}\n\n// Usage\n.element {\n  width: 100%;\n\n  @include respond-to("md") {\n    width: 50%;\n  }\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"performance",children:"Performance"}),"\n",(0,l.jsx)(n.h3,{id:"selector-efficiency",children:"Selector Efficiency"}),"\n",(0,l.jsx)(n.p,{children:"Optimize selector performance:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Avoid universal selectors"})," (",(0,l.jsx)(n.code,{children:"*"}),")"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Minimize selector depth"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-css",children:"/* Less efficient */\n.header .navigation ul li a {\n}\n\n/* More efficient */\n.nav-link {\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Limit descendant selectors"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Be specific but not overly"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"reduce-repaints-and-reflows",children:"Reduce Repaints and Reflows"}),"\n",(0,l.jsx)(n.p,{children:"Some properties trigger layout recalculation more than others:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-css",children:"/* May trigger layout recalculation */\n.element {\n  width: 50%;\n  height: 100px;\n}\n\n/* Generally more efficient for animations */\n.element {\n  transform: scale(1.5);\n  opacity: 0.8;\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"critical-css",children:"Critical CSS"}),"\n",(0,l.jsx)(n.p,{children:"Extract and inline critical styles for faster initial render:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-html",children:'<head>\n  <style>\n    /* Critical CSS for above-the-fold content */\n    header {\n      /* ... */\n    }\n    .hero {\n      /* ... */\n    }\n  </style>\n  <link\n    rel="stylesheet"\n    href="main.css"\n    media="print"\n    onload="this.media=\'all\'"\n  />\n</head>\n'})}),"\n",(0,l.jsx)(n.h3,{id:"file-size-optimization",children:"File Size Optimization"}),"\n",(0,l.jsx)(n.p,{children:"Reduce unnecessary code:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Remove unused styles (tools like PurgeCSS can help)"}),"\n",(0,l.jsx)(n.li,{children:"Minify CSS for production"}),"\n",(0,l.jsx)(n.li,{children:"Consider code splitting for large applications"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"accessibility",children:"Accessibility"}),"\n",(0,l.jsx)(n.h3,{id:"color-and-contrast",children:"Color and Contrast"}),"\n",(0,l.jsx)(n.p,{children:"Ensure sufficient contrast for readability:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-css",children:"/* Good contrast */\n.text {\n  color: #333;\n  background-color: #fff;\n}\n\n/* Consider high contrast mode */\n@media (prefers-contrast: high) {\n  .text {\n    color: #000;\n    background-color: #fff;\n  }\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"text-sizing",children:"Text Sizing"}),"\n",(0,l.jsx)(n.p,{children:"Use relative units for better accessibility:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-css",children:"body {\n  font-size: 16px; /* Base size */\n}\n\nh1 {\n  font-size: 2rem; /* Relative to root font size */\n}\n\np {\n  font-size: 1em; /* Relative to parent */\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"focus-styles",children:"Focus Styles"}),"\n",(0,l.jsx)(n.p,{children:"Never remove focus indicators without providing alternatives:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-css",children:"/* Bad */\n:focus {\n  outline: none;\n}\n\n/* Good */\n:focus {\n  outline: 2px solid #4a90e2;\n  outline-offset: 3px;\n}\n\n/* Alternative focus style */\n:focus:not(:focus-visible) {\n  outline: none;\n}\n\n:focus-visible {\n  outline: 2px solid #4a90e2;\n  outline-offset: 3px;\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"reduced-motion",children:"Reduced Motion"}),"\n",(0,l.jsx)(n.p,{children:"Respect user preferences for reduced motion:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-css",children:".element {\n  transition: transform 0.3s ease;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .element {\n    transition: none;\n  }\n}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"browser-compatibility",children:"Browser Compatibility"}),"\n",(0,l.jsx)(n.h3,{id:"vendor-prefixes",children:"Vendor Prefixes"}),"\n",(0,l.jsx)(n.p,{children:"Use tools like Autoprefixer instead of manually adding prefixes:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-css",children:"/* Let Autoprefixer handle this */\n.element {\n  display: flex;\n  user-select: none;\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"feature-detection",children:"Feature Detection"}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.code,{children:"@supports"})," to provide fallbacks:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-css",children:".element {\n  display: block; /* Fallback */\n}\n\n@supports (display: grid) {\n  .element {\n    display: grid;\n  }\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"css-variables-with-fallbacks",children:"CSS Variables with Fallbacks"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-css",children:".element {\n  color: #3498db; /* Fallback */\n  color: var(--primary-color, #3498db);\n}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,l.jsx)(n.h3,{id:"code-comments",children:"Code Comments"}),"\n",(0,l.jsx)(n.p,{children:"Document your CSS appropriately:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-css",children:"/* ==========================================================================\n   Section comment block\n   ========================================================================== */\n\n/* Sub-section comment block\n   ========================================================================== */\n\n/**\n * Component: Button\n * \n * Primary buttons are used for main actions.\n * Use .btn--secondary for less prominent actions.\n */\n.btn {\n  /* ... */\n}\n\n/* Simple comment for a specific declaration */\n.element {\n  z-index: 100; /* Needs to appear above .modal (z-index: 90) */\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"style-guide",children:"Style Guide"}),"\n",(0,l.jsx)(n.p,{children:"Maintain a living style guide that documents:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Color palette"}),"\n",(0,l.jsx)(n.li,{children:"Typography"}),"\n",(0,l.jsx)(n.li,{children:"Components"}),"\n",(0,l.jsx)(n.li,{children:"Layout patterns"}),"\n",(0,l.jsx)(n.li,{children:"Usage guidelines"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"tools-and-workflows",children:"Tools and Workflows"}),"\n",(0,l.jsx)(n.h3,{id:"css-linting",children:"CSS Linting"}),"\n",(0,l.jsx)(n.p,{children:"Use stylelint to enforce consistent style:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "extends": "stylelint-config-standard",\n  "rules": {\n    "indentation": 2,\n    "color-hex-case": "lower",\n    "selector-class-pattern": "^[a-z][a-zA-Z0-9_-]+$"\n  }\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"formatting",children:"Formatting"}),"\n",(0,l.jsx)(n.p,{children:"Use Prettier or similar tools to maintain consistent formatting."}),"\n",(0,l.jsx)(n.h3,{id:"version-control",children:"Version Control"}),"\n",(0,l.jsx)(n.p,{children:"Commit smaller, focused changes with descriptive messages."}),"\n",(0,l.jsx)(n.h2,{id:"common-pitfalls-to-avoid",children:"Common Pitfalls to Avoid"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Overriding styles repeatedly"}),": Fix the root issue instead"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Overly specific selectors"}),": Keeps specificity wars at bay"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Styling with IDs"}),": Leads to specificity problems"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsxs)(n.strong,{children:["Using ",(0,l.jsx)(n.code,{children:"!important"})]}),": Often indicates a specificity problem"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Ignoring mobile devices"}),": Always design with responsiveness in mind"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Inconsistent units"}),": Stick to a system (e.g., rem for most sizing)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Not refactoring"}),": Regularly clean up and improve CSS codebase"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/MDN/Guidelines/Code_guidelines/CSS",children:"MDN CSS Guidelines"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://google.github.io/styleguide/htmlcssguide.html",children:"Google HTML/CSS Style Guide"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://github.com/airbnb/css",children:"Airbnb CSS / Sass Styleguide"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://cssguidelin.es/",children:"CSS Guidelines by Harry Roberts"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://css-tricks.com/guides/",children:"CSS Tricks Articles"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var s=i(6540);const l={},r=s.createContext(l);function t(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);