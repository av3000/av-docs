"use strict";(self.webpackChunkav_docusaurus_classic=self.webpackChunkav_docusaurus_classic||[]).push([[3776],{9277:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"frontend/styling/architecture/atomic-css","title":"Atomic CSS","description":"Atomic CSS (also known as Functional CSS) is a CSS architecture approach that favors small, single-purpose classes with names based on their visual function. Instead of creating semantic, content-specific classes, Atomic CSS uses utility classes that are highly reusable and serve a single styling purpose.","source":"@site/docs/frontend/styling/architecture/atomic-css.md","sourceDirName":"frontend/styling/architecture","slug":"/frontend/styling/architecture/atomic-css","permalink":"/av-docs/docs/frontend/styling/architecture/atomic-css","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/frontend/styling/architecture/atomic-css.md","tags":[],"version":"current","frontMatter":{},"sidebar":"frontendSidebar","previous":{"title":"CSS Best Practices","permalink":"/av-docs/docs/frontend/styling/best-practices/"},"next":{"title":"BEM (Block Element Modifier)","permalink":"/av-docs/docs/frontend/styling/architecture/bem"}}');var t=s(4848),l=s(8453);const r={},c="Atomic CSS",o={},a=[{value:"Core Concepts",id:"core-concepts",level:2},{value:"Single-Purpose Classes",id:"single-purpose-classes",level:3},{value:"Building UI from Atomic Classes",id:"building-ui-from-atomic-classes",level:3},{value:"Naming Conventions",id:"naming-conventions",level:3},{value:"Popular Atomic CSS Frameworks",id:"popular-atomic-css-frameworks",level:2},{value:"Tailwind CSS",id:"tailwind-css",level:3},{value:"Tachyons",id:"tachyons",level:3},{value:"Basscss",id:"basscss",level:3},{value:"Benefits of Atomic CSS",id:"benefits-of-atomic-css",level:2},{value:"1. Reduced CSS File Size",id:"1-reduced-css-file-size",level:3},{value:"2. Faster Development",id:"2-faster-development",level:3},{value:"3. Consistency",id:"3-consistency",level:3},{value:"4. Lower Cognitive Load",id:"4-lower-cognitive-load",level:3},{value:"Implementation Approaches",id:"implementation-approaches",level:2},{value:"1. Using a Pre-built Framework",id:"1-using-a-pre-built-framework",level:3},{value:"2. Building a Custom System",id:"2-building-a-custom-system",level:3},{value:"3. Using CSS-in-JS with Atomic Principles",id:"3-using-css-in-js-with-atomic-principles",level:3},{value:"Common Criticisms and Solutions",id:"common-criticisms-and-solutions",level:2},{value:"1. &quot;HTML Becomes Bloated with Classes&quot;",id:"1-html-becomes-bloated-with-classes",level:3},{value:"2. &quot;Lacks Semantic Meaning&quot;",id:"2-lacks-semantic-meaning",level:3},{value:"3. &quot;Difficult to Change Design Globally&quot;",id:"3-difficult-to-change-design-globally",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Establish Design System Constraints",id:"1-establish-design-system-constraints",level:3},{value:"2. Combine with Components",id:"2-combine-with-components",level:3},{value:"3. Responsive Utilities",id:"3-responsive-utilities",level:3},{value:"4. Handle States Consistently",id:"4-handle-states-consistently",level:3},{value:"Atomic CSS vs. Other Methodologies",id:"atomic-css-vs-other-methodologies",level:2},{value:"Resources",id:"resources",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"atomic-css",children:"Atomic CSS"})}),"\n",(0,t.jsx)(n.p,{children:"Atomic CSS (also known as Functional CSS) is a CSS architecture approach that favors small, single-purpose classes with names based on their visual function. Instead of creating semantic, content-specific classes, Atomic CSS uses utility classes that are highly reusable and serve a single styling purpose."}),"\n",(0,t.jsx)(n.h2,{id:"core-concepts",children:"Core Concepts"}),"\n",(0,t.jsx)(n.h3,{id:"single-purpose-classes",children:"Single-Purpose Classes"}),"\n",(0,t.jsx)(n.p,{children:"Each class does exactly one thing and does it well:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-css",children:".mt-0 {\n  margin-top: 0;\n}\n.mt-1 {\n  margin-top: 0.25rem;\n}\n.mt-2 {\n  margin-top: 0.5rem;\n}\n.mt-4 {\n  margin-top: 1rem;\n}\n.mt-8 {\n  margin-top: 2rem;\n}\n\n.text-center {\n  text-align: center;\n}\n.text-left {\n  text-align: left;\n}\n.text-right {\n  text-align: right;\n}\n\n.flex {\n  display: flex;\n}\n.items-center {\n  align-items: center;\n}\n.justify-between {\n  justify-content: space-between;\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"building-ui-from-atomic-classes",children:"Building UI from Atomic Classes"}),"\n",(0,t.jsx)(n.p,{children:"HTML elements are styled by combining multiple utility classes:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<div class="flex justify-between items-center p-4 bg-white shadow rounded mb-4">\n  <h2 class="text-xl font-bold text-gray-800">Card Title</h2>\n  <button\n    class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"\n  >\n    Action\n  </button>\n</div>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"naming-conventions",children:"Naming Conventions"}),"\n",(0,t.jsx)(n.p,{children:"Atomic CSS typically follows terse, abbreviated naming conventions:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Property-value"}),": ",(0,t.jsx)(n.code,{children:"mt-4"})," (margin-top: 1rem)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Property-breakpoint-value"}),": ",(0,t.jsx)(n.code,{children:"md:w-1/2"})," (width: 50% at medium breakpoint)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Property-state-value"}),": ",(0,t.jsx)(n.code,{children:"hover:bg-blue-700"})," (background-color on hover)"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"popular-atomic-css-frameworks",children:"Popular Atomic CSS Frameworks"}),"\n",(0,t.jsx)(n.h3,{id:"tailwind-css",children:"Tailwind CSS"}),"\n",(0,t.jsx)(n.p,{children:"The most popular Atomic CSS framework with a comprehensive set of utility classes:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<button\n  class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"\n>\n  Button\n</button>\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Documentation: ",(0,t.jsx)(n.a,{href:"https://tailwindcss.com/",children:"Tailwind CSS"})]}),"\n",(0,t.jsx)(n.h3,{id:"tachyons",children:"Tachyons"}),"\n",(0,t.jsx)(n.p,{children:"One of the original Atomic CSS frameworks focused on readable abbreviations:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<button class="bg-blue white-90 br2 pa2 pointer hover-bg-dark-blue">\n  Button\n</button>\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Documentation: ",(0,t.jsx)(n.a,{href:"https://tachyons.io/",children:"Tachyons"})]}),"\n",(0,t.jsx)(n.h3,{id:"basscss",children:"Basscss"}),"\n",(0,t.jsx)(n.p,{children:"Lightweight Atomic CSS toolkit with a clear naming convention:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<button class="bg-blue white rounded px2 py1 mr1">Button</button>\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Documentation: ",(0,t.jsx)(n.a,{href:"https://basscss.com/",children:"Basscss"})]}),"\n",(0,t.jsx)(n.h2,{id:"benefits-of-atomic-css",children:"Benefits of Atomic CSS"}),"\n",(0,t.jsx)(n.h3,{id:"1-reduced-css-file-size",children:"1. Reduced CSS File Size"}),"\n",(0,t.jsx)(n.p,{children:"Despite having many classes, the actual CSS file size is typically smaller because:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No duplication of property-value pairs"}),"\n",(0,t.jsx)(n.li,{children:"High reusability of utility classes"}),"\n",(0,t.jsx)(n.li,{children:"Better compression due to repetitive class names"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example of traditional CSS growth vs. Atomic CSS:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Traditional CSS (grows linearly with components)"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-css",children:".card {\n  margin-bottom: 1rem;\n  padding: 1rem;\n  border-radius: 0.25rem;\n  background-color: white;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.profile-card {\n  margin-bottom: 1rem;\n  padding: 1rem;\n  border-radius: 0.25rem;\n  background-color: white;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  display: flex;\n  align-items: center;\n}\n\n/* CSS keeps growing as new components are added */\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Atomic CSS (stays relatively constant)"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-css",children:".mb-4 {\n  margin-bottom: 1rem;\n}\n.p-4 {\n  padding: 1rem;\n}\n.rounded {\n  border-radius: 0.25rem;\n}\n.bg-white {\n  background-color: white;\n}\n.shadow {\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n.flex {\n  display: flex;\n}\n.items-center {\n  align-items: center;\n}\n\n/* No new CSS needed for new components */\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-faster-development",children:"2. Faster Development"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No need to create and name custom CSS classes"}),"\n",(0,t.jsx)(n.li,{children:"Consistent spacing, sizing, and color values"}),"\n",(0,t.jsx)(n.li,{children:"Reduced context switching between HTML and CSS files"}),"\n",(0,t.jsx)(n.li,{children:"Changes can be made directly in HTML without touching CSS"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-consistency",children:"3. Consistency"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Predefined set of values enforces design consistency"}),"\n",(0,t.jsx)(n.li,{children:"Design system constraints built into the class names"}),"\n",(0,t.jsx)(n.li,{children:"Easier to maintain a consistent look and feel"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"4-lower-cognitive-load",children:"4. Lower Cognitive Load"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No need to invent semantic class names"}),"\n",(0,t.jsx)(n.li,{children:"Predictable naming patterns"}),"\n",(0,t.jsx)(n.li,{children:"Easier to understand what a class does from its name"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"implementation-approaches",children:"Implementation Approaches"}),"\n",(0,t.jsx)(n.h3,{id:"1-using-a-pre-built-framework",children:"1. Using a Pre-built Framework"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'\x3c!-- Using Tailwind CSS --\x3e\n<div class="flex items-center p-4 bg-gray-100 rounded-lg shadow-md">\n  <img class="w-12 h-12 rounded-full mr-4" src="avatar.jpg" alt="Avatar" />\n  <div>\n    <h3 class="text-lg font-medium text-gray-900">John Doe</h3>\n    <p class="text-gray-500">Software Developer</p>\n  </div>\n</div>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"2-building-a-custom-system",children:"2. Building a Custom System"}),"\n",(0,t.jsx)(n.p,{children:"Create your own atomic classes based on your design system:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-css",children:"/* Spacing */\n.mt-0 {\n  margin-top: 0;\n}\n.mt-sm {\n  margin-top: 8px;\n}\n.mt-md {\n  margin-top: 16px;\n}\n.mt-lg {\n  margin-top: 24px;\n}\n.mt-xl {\n  margin-top: 32px;\n}\n\n/* Colors */\n.bg-primary {\n  background-color: #0066cc;\n}\n.bg-secondary {\n  background-color: #f8f9fa;\n}\n.text-dark {\n  color: #212529;\n}\n.text-light {\n  color: #f8f9fa;\n}\n\n/* ... and so on */\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-using-css-in-js-with-atomic-principles",children:"3. Using CSS-in-JS with Atomic Principles"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'// Using styled-system with React\nimport { Box, Flex, Text, Heading } from "rebass";\n\nfunction Card() {\n  return (\n    <Flex p={4} bg="white" borderRadius={4} boxShadow="md">\n      <Box mr={3}>\n        <Heading fontSize={3}>Card Title</Heading>\n        <Text fontSize={1} color="gray.6">\n          Card description here\n        </Text>\n      </Box>\n    </Flex>\n  );\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"common-criticisms-and-solutions",children:"Common Criticisms and Solutions"}),"\n",(0,t.jsx)(n.h3,{id:"1-html-becomes-bloated-with-classes",children:'1. "HTML Becomes Bloated with Classes"'}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Criticism"}),": Long strings of utility classes make HTML harder to read."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solutions"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Use component-based frameworks to encapsulate class patterns"}),"\n",(0,t.jsx)(n.li,{children:"Apply consistent class ordering (layout, typography, colors, etc.)"}),"\n",(0,t.jsx)(n.li,{children:"Use IDE extensions for better class management"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'// React component example\nfunction Button({ primary, children }) {\n  const classes = primary\n    ? "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"\n    : "bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded";\n\n  return <button className={classes}>{children}</button>;\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"2-lacks-semantic-meaning",children:'2. "Lacks Semantic Meaning"'}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Criticism"}),": Class names don't describe what the element is, only how it looks."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solutions"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Use semantic HTML elements (",(0,t.jsx)(n.code,{children:"<nav>"}),", ",(0,t.jsx)(n.code,{children:"<article>"}),", etc.)"]}),"\n",(0,t.jsx)(n.li,{children:"Add data attributes for additional semantics"}),"\n",(0,t.jsx)(n.li,{children:"Remember that CSS classes aren't meant to duplicate HTML semantics"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-difficult-to-change-design-globally",children:'3. "Difficult to Change Design Globally"'}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Criticism"}),": Changes require updating HTML everywhere rather than changing CSS."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solutions"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Use component libraries to abstract utility patterns"}),"\n",(0,t.jsx)(n.li,{children:"Use preprocessors with design tokens and variables"}),"\n",(0,t.jsx)(n.li,{children:"Leverage search and replace for one-off changes"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsx)(n.h3,{id:"1-establish-design-system-constraints",children:"1. Establish Design System Constraints"}),"\n",(0,t.jsx)(n.p,{children:"Define a limited set of values for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Spacing (margin, padding)"}),"\n",(0,t.jsx)(n.li,{children:"Colors (background, text)"}),"\n",(0,t.jsx)(n.li,{children:"Typography (font size, weight, line height)"}),"\n",(0,t.jsx)(n.li,{children:"Breakpoints (responsive utilities)"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'// Example Tailwind configuration\nmodule.exports = {\n  theme: {\n    spacing: {\n      0: "0",\n      1: "0.25rem",\n      2: "0.5rem",\n      4: "1rem",\n      8: "2rem",\n      // ...limited set of values\n    },\n    colors: {\n      // Limited color palette\n    },\n    // Other constraints\n  },\n};\n'})}),"\n",(0,t.jsx)(n.h3,{id:"2-combine-with-components",children:"2. Combine with Components"}),"\n",(0,t.jsx)(n.p,{children:"Use a component-based architecture to wrap commonly used utility combinations:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'// React component with atomic classes\nfunction Card({ title, children }) {\n  return (\n    <div className="p-4 bg-white rounded shadow">\n      <h2 className="text-xl font-bold mb-2">{title}</h2>\n      <div>{children}</div>\n    </div>\n  );\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"3-responsive-utilities",children:"3. Responsive Utilities"}),"\n",(0,t.jsx)(n.p,{children:"Use consistent breakpoint prefixes for responsive design:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<div class="w-full md:w-1/2 lg:w-1/3">\n  \x3c!-- Full width on mobile, half on tablet, third on desktop --\x3e\n</div>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"4-handle-states-consistently",children:"4. Handle States Consistently"}),"\n",(0,t.jsx)(n.p,{children:"Use state variants for interactive states:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<button class="bg-blue-500 hover:bg-blue-700 focus:ring-2 focus:ring-blue-300">\n  Button\n</button>\n'})}),"\n",(0,t.jsx)(n.h2,{id:"atomic-css-vs-other-methodologies",children:"Atomic CSS vs. Other Methodologies"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Methodology"}),(0,t.jsx)(n.th,{children:"Focus"}),(0,t.jsx)(n.th,{children:"HTML vs. CSS Size"}),(0,t.jsx)(n.th,{children:"Naming Convention"}),(0,t.jsx)(n.th,{children:"Learning Curve"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Atomic CSS"})}),(0,t.jsx)(n.td,{children:"Visual functions"}),(0,t.jsx)(n.td,{children:"More HTML, less CSS"}),(0,t.jsx)(n.td,{children:"Property-value based"}),(0,t.jsx)(n.td,{children:"Medium"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"BEM"})}),(0,t.jsx)(n.td,{children:"Component structure"}),(0,t.jsx)(n.td,{children:"Less HTML, more CSS"}),(0,t.jsx)(n.td,{children:"Block__Element--Modifier"}),(0,t.jsx)(n.td,{children:"Medium"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"OOCSS"})}),(0,t.jsx)(n.td,{children:"Separation of concerns"}),(0,t.jsx)(n.td,{children:"Balanced"}),(0,t.jsx)(n.td,{children:"Content-focused"}),(0,t.jsx)(n.td,{children:"Medium"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"SMACSS"})}),(0,t.jsx)(n.td,{children:"Organization"}),(0,t.jsx)(n.td,{children:"Balanced"}),(0,t.jsx)(n.td,{children:"Categorized"}),(0,t.jsx)(n.td,{children:"Medium"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://tailwindcss.com/docs",children:"Tailwind CSS Documentation"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://tachyons.io/docs/",children:"Tachyons Documentation"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://acss.io/thinking-in-atomic.html",children:"Atomic CSS - Thierry Koblentz's Original Article"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://frontstuff.io/in-defense-of-utility-first-css",children:"In Defense of Utility-First CSS - Sarah Dayan"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://adamwathan.me/css-utility-classes-and-separation-of-concerns/",children:'CSS Utility Classes and "Separation of Concerns" - Adam Wathan'})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://johnpolacek.github.io/the-case-for-atomic-css/",children:"The Case for Atomic/Utility-First CSS - John Polacek"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://mxstbr.com/thoughts/atomic-css-in-js/",children:"Atomic CSS-in-JS - Max Stoiber"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var i=s(6540);const t={},l=i.createContext(t);function r(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);