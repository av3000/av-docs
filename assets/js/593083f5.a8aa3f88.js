"use strict";(self.webpackChunkav_docusaurus_classic=self.webpackChunkav_docusaurus_classic||[]).push([[280],{673:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"frontend/angular/design-patterns/behavioural-patterns/chain-of-responsibility","title":"Chain of Responsibility","description":"Use case: Passing a request along a chain of handlers until one handles it.","source":"@site/docs/frontend/angular/design-patterns/behavioural-patterns/chain-of-responsibility.md","sourceDirName":"frontend/angular/design-patterns/behavioural-patterns","slug":"/frontend/angular/design-patterns/behavioural-patterns/chain-of-responsibility","permalink":"/av-docs/docs/frontend/angular/design-patterns/behavioural-patterns/chain-of-responsibility","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/frontend/angular/design-patterns/behavioural-patterns/chain-of-responsibility.md","tags":[],"version":"current","frontMatter":{},"sidebar":"devopsSidebar","previous":{"title":"Intro","permalink":"/av-docs/docs/frontend/angular/design-patterns/behavioural-patterns/"},"next":{"title":"Command","permalink":"/av-docs/docs/frontend/angular/design-patterns/behavioural-patterns/command"}}');var s=t(4848),a=t(8453);const o={},i="Chain of Responsibility",p={},l=[];function c(e){const n={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"chain-of-responsibility",children:"Chain of Responsibility"})}),"\n",(0,s.jsx)(n.p,{children:"Use case: Passing a request along a chain of handlers until one handles it."}),"\n",(0,s.jsx)(n.p,{children:"Example: Angular's HTTP interceptors that process HTTP requests/responses."}),"\n",(0,s.jsx)(n.p,{children:"How to find: Look for implementations of HttpInterceptor and the use of next.handle()."}),"\n",(0,s.jsx)(n.p,{children:"Explanation:"}),"\n",(0,s.jsx)(n.p,{children:"The Chain of Responsibility pattern allows an event to be processed by multiple handlers, one after the other, until it is handled. In Angular, HTTP interceptors form a chain where each interceptor can modify the request or response and then pass it along to the next interceptor."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'// auth.interceptor.ts\nimport { Injectable } from "@angular/core";\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n} from "@angular/common/http";\nimport { Observable } from "rxjs";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const authToken = "Bearer xyz123";\n    const authReq = req.clone({\n      setHeaders: { Authorization: authToken },\n    });\n    return next.handle(authReq);\n  }\n}\n\n// logging.interceptor.ts\nimport { Injectable } from "@angular/core";\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n} from "@angular/common/http";\nimport { Observable } from "rxjs";\n\n@Injectable()\nexport class LoggingInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    console.log("Outgoing request", req);\n    return next.handle(req);\n  }\n}\n\n// app.module.ts\nimport { HTTP_INTERCEPTORS } from "@angular/common/http";\n\n@NgModule({\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: LoggingInterceptor, multi: true },\n  ],\n})\nexport class AppModule {}\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Multiple interceptors (AuthInterceptor, LoggingInterceptor) are applied in sequence."}),"\n",(0,s.jsx)(n.li,{children:"Each interceptor can handle the request and pass it to the next one using next.handle(req)."}),"\n",(0,s.jsx)(n.li,{children:"This forms a chain of responsibility where each interceptor has the opportunity to process the request."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var r=t(6540);const s={},a=r.createContext(s);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);