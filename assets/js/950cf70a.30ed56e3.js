"use strict";(self.webpackChunkav_docusaurus_classic=self.webpackChunkav_docusaurus_classic||[]).push([[2950],{35:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"frontend/angular/design-patterns/structural-patterns/adapter","title":"Adapter","description":"Use case: Allowing incompatible interfaces to work together.","source":"@site/docs/frontend/angular/design-patterns/structural-patterns/adapter.md","sourceDirName":"frontend/angular/design-patterns/structural-patterns","slug":"/frontend/angular/design-patterns/structural-patterns/adapter","permalink":"/av-docs/docs/frontend/angular/design-patterns/structural-patterns/adapter","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/frontend/angular/design-patterns/structural-patterns/adapter.md","tags":[],"version":"current","frontMatter":{},"sidebar":"frontendSidebar","previous":{"title":"Intro","permalink":"/av-docs/docs/frontend/angular/design-patterns/structural-patterns/"},"next":{"title":"Bridge","permalink":"/av-docs/docs/frontend/angular/design-patterns/structural-patterns/bridge"}}');var a=t(4848),o=t(8453);const s={},i="Adapter",c={},l=[];function g(e){const r={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"adapter",children:"Adapter"})}),"\n",(0,a.jsx)(r.p,{children:"Use case: Allowing incompatible interfaces to work together."}),"\n",(0,a.jsx)(r.p,{children:"Example: Integrating a third-party library or legacy code with an Angular application."}),"\n",(0,a.jsx)(r.p,{children:"How to find: Look for services or components that wrap external APIs or libraries to conform to the application's expected interfaces."}),"\n",(0,a.jsx)(r.p,{children:"Explanation:"}),"\n",(0,a.jsx)(r.p,{children:"The Adapter pattern allows objects with incompatible interfaces to collaborate. In Angular, you might need to use a third-party library that doesn't fit neatly into your application's architecture. By creating an adapter (wrapper), you can translate the interface of the library into one that your application understands."}),"\n",(0,a.jsx)(r.p,{children:"Example Code:"}),"\n",(0,a.jsx)(r.p,{children:"Suppose you're integrating a third-party logging library that doesn't fit Angular's logging service interface."}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-js",children:"// third-party-logger.ts (Third-party library)\nexport class ThirdPartyLogger {\n  logMessage(msg: string) {\n    console.log(`ThirdPartyLogger: ${msg}`);\n  }\n\n  logError(err: string) {\n    console.error(`ThirdPartyLogger Error: ${err}`);\n  }\n}\n\n// Adapter logger.service.ts\nimport { Injectable } from '@angular/core';\nimport { ThirdPartyLogger } from './third-party-logger';\n\nexport interface ILoggerService {\n  log(message: string): void;\n  error(message: string): void;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoggerService implements ILoggerService {\n  private thirdPartyLogger = new ThirdPartyLogger();\n\n  log(message: string): void {\n    this.thirdPartyLogger.logMessage(message);\n  }\n\n  error(message: string): void {\n    this.thirdPartyLogger.logError(message);\n  }\n}\n\n// example.component.ts\nimport { Component } from '@angular/core';\nimport { LoggerService } from './logger.service';\n\n@Component({\n  selector: 'app-example',\n  template: `<button (click)=\"doSomething()\">Do Something</button>`,\n})\nexport class ExampleComponent {\n  constructor(private logger: LoggerService) {}\n\n  doSomething() {\n    this.logger.log('Action performed.');\n  }\n}\n"})}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:"The LoggerService acts as an adapter between the Angular application and the ThirdPartyLogger."}),"\n",(0,a.jsx)(r.li,{children:"It implements an ILoggerService interface that the application components expect."}),"\n",(0,a.jsx)(r.li,{children:"The components use LoggerService without needing to know about the ThirdPartyLogger."}),"\n"]})]})}function p(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(g,{...e})}):g(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>s,x:()=>i});var n=t(6540);const a={},o=n.createContext(a);function s(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);