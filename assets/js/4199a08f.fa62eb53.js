"use strict";(self.webpackChunkav_docusaurus_classic=self.webpackChunkav_docusaurus_classic||[]).push([[9977],{2615:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>n,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"frontend/styling/architecture/index","title":"CSS Architecture","description":"CSS architecture refers to the methodologies and organizational patterns used to structure CSS code in a scalable and maintainable way. As projects grow in size and complexity, having a solid CSS architecture becomes crucial for managing styles effectively.","source":"@site/docs/frontend/styling/architecture/index.md","sourceDirName":"frontend/styling/architecture","slug":"/frontend/styling/architecture/","permalink":"/av-docs/docs/frontend/styling/architecture/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/frontend/styling/architecture/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"frontendSidebar","previous":{"title":"CSS Modules","permalink":"/av-docs/docs/frontend/styling/architecture/css-modules"},"next":{"title":"ITCSS","permalink":"/av-docs/docs/frontend/styling/architecture/itcss"}}');var c=s(4848),i=s(8453);const n={},a="CSS Architecture",o={},l=[{value:"Why CSS Architecture Matters",id:"why-css-architecture-matters",level:2},{value:"Popular CSS Architectures",id:"popular-css-architectures",level:2},{value:"BEM (Block, Element, Modifier)",id:"bem-block-element-modifier",level:3},{value:"ITCSS (Inverted Triangle CSS)",id:"itcss-inverted-triangle-css",level:3},{value:"OOCSS (Object-Oriented CSS)",id:"oocss-object-oriented-css",level:3},{value:"SMACSS (Scalable and Modular Architecture for CSS)",id:"smacss-scalable-and-modular-architecture-for-css",level:3},{value:"Atomic CSS",id:"atomic-css",level:3},{value:"CSS Modules",id:"css-modules",level:3},{value:"Choosing the Right Architecture",id:"choosing-the-right-architecture",level:2},{value:"Key Principles Across Architectures",id:"key-principles-across-architectures",level:2}];function d(e){const t={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.header,{children:(0,c.jsx)(t.h1,{id:"css-architecture",children:"CSS Architecture"})}),"\n",(0,c.jsx)(t.p,{children:"CSS architecture refers to the methodologies and organizational patterns used to structure CSS code in a scalable and maintainable way. As projects grow in size and complexity, having a solid CSS architecture becomes crucial for managing styles effectively."}),"\n",(0,c.jsx)(t.h2,{id:"why-css-architecture-matters",children:"Why CSS Architecture Matters"}),"\n",(0,c.jsx)(t.p,{children:"Without a proper architecture, CSS can quickly become:"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsx)(t.li,{children:"Hard to maintain"}),"\n",(0,c.jsx)(t.li,{children:"Prone to specificity conflicts"}),"\n",(0,c.jsx)(t.li,{children:"Difficult to scale"}),"\n",(0,c.jsx)(t.li,{children:"Full of redundancies and inconsistencies"}),"\n"]}),"\n",(0,c.jsx)(t.p,{children:"A good CSS architecture helps solve these problems by providing:"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsx)(t.li,{children:"Clear structure and organization"}),"\n",(0,c.jsx)(t.li,{children:"Modular and reusable components"}),"\n",(0,c.jsx)(t.li,{children:"Predictable specificity"}),"\n",(0,c.jsx)(t.li,{children:"Reduced CSS size"}),"\n"]}),"\n",(0,c.jsx)(t.h2,{id:"popular-css-architectures",children:"Popular CSS Architectures"}),"\n",(0,c.jsx)(t.p,{children:"This section covers the most widely-used CSS architectural methodologies:"}),"\n",(0,c.jsx)(t.h3,{id:"bem-block-element-modifier",children:(0,c.jsx)(t.a,{href:"/av-docs/docs/frontend/styling/architecture/bem",children:"BEM (Block, Element, Modifier)"})}),"\n",(0,c.jsx)(t.p,{children:"A naming convention methodology that helps create reusable components and code sharing in front-end development."}),"\n",(0,c.jsx)(t.h3,{id:"itcss-inverted-triangle-css",children:(0,c.jsx)(t.a,{href:"/av-docs/docs/frontend/styling/architecture/itcss",children:"ITCSS (Inverted Triangle CSS)"})}),"\n",(0,c.jsx)(t.p,{children:"A scalable and maintainable CSS architecture that organizes CSS by specificity, creating a layered structure."}),"\n",(0,c.jsx)(t.h3,{id:"oocss-object-oriented-css",children:(0,c.jsx)(t.a,{href:"/av-docs/docs/frontend/styling/architecture/oocss",children:"OOCSS (Object-Oriented CSS)"})}),"\n",(0,c.jsx)(t.p,{children:"A methodology that encourages code reuse and separation of structure from skin."}),"\n",(0,c.jsx)(t.h3,{id:"smacss-scalable-and-modular-architecture-for-css",children:(0,c.jsx)(t.a,{href:"/av-docs/docs/frontend/styling/architecture/smacss",children:"SMACSS (Scalable and Modular Architecture for CSS)"})}),"\n",(0,c.jsx)(t.p,{children:"A style guide that categorizes CSS rules to make styles more organized and manageable."}),"\n",(0,c.jsx)(t.h3,{id:"atomic-css",children:(0,c.jsx)(t.a,{href:"/av-docs/docs/frontend/styling/architecture/atomic-css",children:"Atomic CSS"})}),"\n",(0,c.jsx)(t.p,{children:"An approach focused on small, single-purpose utility classes that are composed to create UI components."}),"\n",(0,c.jsx)(t.h3,{id:"css-modules",children:(0,c.jsx)(t.a,{href:"/av-docs/docs/frontend/styling/architecture/css-modules",children:"CSS Modules"})}),"\n",(0,c.jsx)(t.p,{children:"A methodology that uses local scope for CSS classes to avoid conflicts and promote component-based styling."}),"\n",(0,c.jsx)(t.h2,{id:"choosing-the-right-architecture",children:"Choosing the Right Architecture"}),"\n",(0,c.jsx)(t.p,{children:"The best architecture depends on:"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsx)(t.li,{children:"Project size and complexity"}),"\n",(0,c.jsx)(t.li,{children:"Team size and expertise"}),"\n",(0,c.jsx)(t.li,{children:"Integration with frameworks"}),"\n",(0,c.jsx)(t.li,{children:"Performance requirements"}),"\n"]}),"\n",(0,c.jsx)(t.p,{children:"Many projects combine multiple approaches to create a hybrid architecture that meets their specific needs."}),"\n",(0,c.jsx)(t.h2,{id:"key-principles-across-architectures",children:"Key Principles Across Architectures"}),"\n",(0,c.jsx)(t.p,{children:"Despite their differences, most CSS architectures share these principles:"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.strong,{children:"Modularity"}),": Breaking CSS into smaller, manageable chunks"]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.strong,{children:"Reusability"}),": Designing styles that can be reused across components"]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.strong,{children:"Maintainability"}),": Making CSS easy to update and extend"]}),"\n",(0,c.jsxs)(t.li,{children:[(0,c.jsx)(t.strong,{children:"Scalability"}),": Ensuring the system works well as it grows"]}),"\n"]}),"\n",(0,c.jsx)(t.p,{children:"Explore each architecture in detail through the links above to determine which approach is best suited for your projects."})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>n,x:()=>a});var r=s(6540);const c={},i=r.createContext(c);function n(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:n(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);