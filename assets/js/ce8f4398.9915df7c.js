"use strict";(self.webpackChunkav_docusaurus_classic=self.webpackChunkav_docusaurus_classic||[]).push([[8785],{6605:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"frontend/testing/component-testing/index","title":"Component Testing","description":"Docs everything for component(integration) testing.","source":"@site/docs/frontend/testing/component-testing/index.md","sourceDirName":"frontend/testing/component-testing","slug":"/frontend/testing/component-testing/","permalink":"/av-docs/docs/frontend/testing/component-testing/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/frontend/testing/component-testing/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"frontendSidebar","previous":{"title":"Frontend Testing","permalink":"/av-docs/docs/frontend/testing/"},"next":{"title":"Cypress E2E Testing","permalink":"/av-docs/docs/frontend/testing/cypress-e2e-testing/"}}');var i=t(4848),r=t(8453);const c={},o="Component Testing",d={},l=[{value:"Example repository for component testing",id:"example-repository-for-component-testing",level:2},{value:"Native way",id:"native-way",level:3},{value:"Test with <code>@ngneat/spectator/jest</code>",id:"test-with-ngneatspectatorjest",level:3},{value:"Test with <code>@testing-library</code>",id:"test-with-testing-library",level:3},{value:"Test with <code>@cypress</code>",id:"test-with-cypress",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"component-testing",children:"Component Testing"})}),"\n",(0,i.jsx)(n.p,{children:"Docs everything for component(integration) testing."}),"\n",(0,i.jsx)(n.h2,{id:"example-repository-for-component-testing",children:"Example repository for component testing"}),"\n",(0,i.jsxs)(n.p,{children:["For context we will use ",(0,i.jsx)(n.a,{href:"https://github.com/av3000/rainerhahnekamp-angular-cypress-component-testing",children:"https://github.com/av3000/rainerhahnekamp-angular-cypress-component-testing"})," repository."]}),"\n",(0,i.jsx)(n.h3,{id:"native-way",children:"Native way"}),"\n",(0,i.jsxs)(n.p,{children:["Example ",(0,i.jsx)(n.a,{href:"https://github.com/av3000/rainerhahnekamp-angular-cypress-component-testing/blob/master/src/app/holidays/request-info/request-info.component.spec.ts",children:"request-info.component.spec.ts"})," component:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["mocking dependencies from ",(0,i.jsx)(n.a,{href:"https://github.com/av3000/rainerhahnekamp-angular-cypress-component-testing/blob/master/src/app/holidays/request-info/request-info.component.ts",children:"request-info.component.ts"}),","]}),"\n",(0,i.jsxs)(n.li,{children:["interact with DOM via ",(0,i.jsx)(n.code,{children:"fixture.debugElement()"}),","]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"fixture.detectChanges()"})," to render html changes,"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"dispatchEvent()"})," triggering event for ",(0,i.jsx)(n.code,{children:"fixture.debugElement()"})," to mock input,"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"TestBed"})," injection for synchronous mock Http request using ",(0,i.jsx)(n.code,{children:"HttpTestingController"}),","]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"fakeAsync"})," for delay operator used in component async handling with ",(0,i.jsx)(n.code,{children:"tick()"}),","]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"data-testid"})," marked html elements for easy selecting via ",(0,i.jsx)(n.code,{children:"fixture.debugElement()"}),","]}),"\n",(0,i.jsxs)(n.li,{children:["once again ",(0,i.jsx)(n.code,{children:"fixture.detectChanges()"})," to render html changes after event, and asynchronous Http request mocked,"]}),"\n",(0,i.jsxs)(n.li,{children:["selecting ",(0,i.jsx)(n.code,{children:"fixture.debugElement().nativeElement"})," to get the message text which had to be dispatched and rendered into the html."]}),"\n",(0,i.jsx)(n.li,{children:"check if result is as expected."}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"test-with-ngneatspectatorjest",children:["Test with ",(0,i.jsx)(n.code,{children:"@ngneat/spectator/jest"})]}),"\n",(0,i.jsxs)(n.p,{children:["Example ",(0,i.jsx)(n.a,{href:"https://github.com/av3000/rainerhahnekamp-angular-cypress-component-testing/blob/master/src/app/holidays/request-info/request-info.component.spectator.spec.ts",children:"request-info.component.spectator.spec.ts"})," component."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Spectator provised shorthand methods to handle same issues of mocking dependencies, detectChanges which automatically, handling things behind the hood by using ",(0,i.jsx)(n.code,{children:"createComponentFactory()"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"spectator.typeInElement()"})," selects input element and passes event value."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"spectator.click()"})," triggers dispatch event for search element."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"TestBed"}),"injection for synchronous mock Http request using ",(0,i.jsx)(n.code,{children:"HttpTestingController"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"fakeAsync"})," for delay operator used in component async handling with ",(0,i.jsx)(n.code,{children:"spectator.tick()"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"spectator.query"})," select element.\n` check if result is as expected"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"test-with-testing-library",children:["Test with ",(0,i.jsx)(n.code,{children:"@testing-library"})]}),"\n",(0,i.jsxs)(n.p,{children:["Example ",(0,i.jsx)(n.a,{href:"https://github.com/av3000/rainerhahnekamp-angular-cypress-component-testing/blob/master/src/app/holidays/request-info/request-info.component.tl.spec.ts",children:"request-info.component.tl.spec.ts"})," component:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Provides even shorter way of handling the test using ",(0,i.jsx)(n.code,{children:"@testing-library/angular/render"})," function replaces and acts as ",(0,i.jsx)(n.code,{children:"TestBed.configure"}),", ",(0,i.jsx)(n.code,{children:"creatComponent"}),", ",(0,i.jsx)(n.code,{children:"fixture.detectChanges()"}),". Accepts html code or Component type as long as it is imported."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"user.type"})," selects input element and passes event value."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"user.click"})," triggers dispatch event for search element."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"TestBed"}),"injection for synchronous mock Http request using ",(0,i.jsx)(n.code,{children:"HttpTestingController"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@testing-library/angular/screen"})," provide findByTestId to select element"]}),"\n",(0,i.jsx)(n.li,{children:"check if result is as expected."}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"test-with-cypress",children:["Test with ",(0,i.jsx)(n.code,{children:"@cypress"})]}),"\n",(0,i.jsxs)(n.p,{children:["Example ",(0,i.jsx)(n.a,{href:"https://github.com/av3000/rainerhahnekamp-angular-cypress-component-testing/blob/master/src/app/holidays/request-info/request-info.component.cy.ts",children:"request-info.component.cy.ts"})," component:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"We can provide HTML template with stylings to test if it works as intended."}),"\n",(0,i.jsx)(n.li,{children:"Runs in a real-browser, solves all dependencies, async requests, DOM and change detection problems."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cy.mount"})," use isolated component and set up its dependencies. We can use actuall HttpClientModule and make actuall request."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cy.intercept"})," providing url we can intercept and response to modify the response."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cy.get"})," select element and interact with it either using filters like ",(0,i.jsx)(n.code,{children:".first()"})," or dispatch events like ",(0,i.jsx)(n.code,{children:".click()"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cy.testid"})," select element with data attribute of ",(0,i.jsx)(n.code,{children:"data-testid"})," and expect our wanted result with ",(0,i.jsx)(n.code,{children:".should()"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"visualisation (browser, screenshots, video recording) and time-travel makes it very straight forward and easy to debug."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Summary:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Biggest disadvantages are slow speed and the need of providing infrastructure and backend services."}),"\n",(0,i.jsx)(n.li,{children:"Insignificant slower than Jest/Karma."}),"\n",(0,i.jsx)(n.li,{children:"Unsuited for tests without DOM interaction."}),"\n",(0,i.jsx)(n.li,{children:"Migrating to cypress requires rewrite(although TestingModule can be reused)"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var s=t(6540);const i={},r=s.createContext(i);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);