"use strict";(self.webpackChunkav_docusaurus_classic=self.webpackChunkav_docusaurus_classic||[]).push([[6746],{9405:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>m});const o=JSON.parse('{"id":"frontend/angular/design-patterns/behavioural-patterns/mediator","title":"Mediator","description":"Use case: Reducing coupling between components by having them communicate through a mediator.","source":"@site/docs/frontend/angular/design-patterns/behavioural-patterns/mediator.md","sourceDirName":"frontend/angular/design-patterns/behavioural-patterns","slug":"/frontend/angular/design-patterns/behavioural-patterns/mediator","permalink":"/av-docs/docs/frontend/angular/design-patterns/behavioural-patterns/mediator","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/frontend/angular/design-patterns/behavioural-patterns/mediator.md","tags":[],"version":"current","frontMatter":{},"sidebar":"devopsSidebar","previous":{"title":"Iterator","permalink":"/av-docs/docs/frontend/angular/design-patterns/behavioural-patterns/iterator"},"next":{"title":"Memento","permalink":"/av-docs/docs/frontend/angular/design-patterns/behavioural-patterns/memento"}}');var r=t(4848),s=t(8453);const a={},i="Mediator",c={},m=[];function d(e){const n={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"mediator",children:"Mediator"})}),"\n",(0,r.jsx)(n.p,{children:"Use case: Reducing coupling between components by having them communicate through a mediator."}),"\n",(0,r.jsx)(n.p,{children:"Example: Using a shared service as a message bus for component communication."}),"\n",(0,r.jsx)(n.p,{children:"How to find: Look for services that facilitate communication between components without them referencing each other directly."}),"\n",(0,r.jsx)(n.p,{children:"Explanation:"}),"\n",(0,r.jsx)(n.p,{children:"The Mediator pattern defines an object that encapsulates how a set of objects interact, promoting loose coupling. In Angular, a shared service with observables can act as a mediator between components."}),"\n",(0,r.jsx)(n.p,{children:"Example Code:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// communication.service.ts\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CommunicationService {\n  private messageSource = new Subject<string>();\n  message$ = this.messageSource.asObservable();\n\n  sendMessage(message: string) {\n    this.messageSource.next(message);\n  }\n}\n\n// sender.component.ts\nimport { Component } from '@angular/core';\nimport { CommunicationService } from './communication.service';\n\n@Component({\n  selector: 'app-sender',\n  template: `<button (click)=\"sendMessage()\">Send Message</button>`,\n})\nexport class SenderComponent {\n  constructor(private communicationService: CommunicationService) {}\n\n  sendMessage() {\n    this.communicationService.sendMessage('Hello from Sender Component');\n  }\n}\n\n// receiver.component.ts\nimport { Component } from '@angular/core';\nimport { CommunicationService } from './communication.service';\n\n@Component({\n  selector: 'app-receiver',\n  template: `<div>Received Message: {{ message }}</div>`,\n})\nexport class ReceiverComponent {\n  message: string;\n\n  constructor(private communicationService: CommunicationService) {\n    this.communicationService.message$.subscribe((msg) => (this.message = msg));\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"CommunicationService acts as the mediator."}),"\n",(0,r.jsx)(n.li,{children:"SenderComponent sends messages via the service."}),"\n",(0,r.jsx)(n.li,{children:"ReceiverComponent subscribes to messages via the service."}),"\n",(0,r.jsx)(n.li,{children:"Components do not directly reference each other, reducing coupling."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var o=t(6540);const r={},s=o.createContext(r);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);