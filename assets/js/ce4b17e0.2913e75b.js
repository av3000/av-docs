"use strict";(self.webpackChunkav_docusaurus_classic=self.webpackChunkav_docusaurus_classic||[]).push([[1266],{1580:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"frontend/styling/frameworks/utility-first/index","title":"Utility-First CSS","description":"Utility-First CSS is an approach to styling that uses small, single-purpose utility classes to build complex components. Rather than writing custom CSS for each component, developers compose styles directly in HTML markup by applying pre-defined utility classes.","source":"@site/docs/frontend/styling/frameworks/utility-first/index.md","sourceDirName":"frontend/styling/frameworks/utility-first","slug":"/frontend/styling/frameworks/utility-first/","permalink":"/av-docs/docs/frontend/styling/frameworks/utility-first/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/frontend/styling/frameworks/utility-first/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"frontendSidebar","previous":{"title":"Tokenami","permalink":"/av-docs/docs/frontend/styling/frameworks/css-in-js/tokenami"},"next":{"title":"Utility-First CSS","permalink":"/av-docs/docs/frontend/styling/frameworks/utility-first/"}}');var t=i(4848),r=i(8453);const l={},a="Utility-First CSS",d={},o=[{value:"The Evolution of Utility-First CSS",id:"the-evolution-of-utility-first-css",level:2},{value:"Popular Utility-First Frameworks",id:"popular-utility-first-frameworks",level:2},{value:"Tailwind CSS",id:"tailwind-css",level:3},{value:"Tachyons",id:"tachyons",level:3},{value:"Windi CSS",id:"windi-css",level:3},{value:"UnoCSS",id:"unocss",level:3},{value:"PigmentCSS",id:"pigmentcss",level:3},{value:"Core Principles",id:"core-principles",level:2},{value:"1. Single-Purpose Classes",id:"1-single-purpose-classes",level:3},{value:"2. Composability",id:"2-composability",level:3},{value:"3. Direct Markup Styling",id:"3-direct-markup-styling",level:3},{value:"4. Design Constraints",id:"4-design-constraints",level:3},{value:"Popular Utility-First Frameworks",id:"popular-utility-first-frameworks-1",level:2},{value:"Tailwind CSS",id:"tailwind-css-1",level:3},{value:"Tachyons",id:"tachyons-1",level:3},{value:"Windi CSS",id:"windi-css-1",level:3},{value:"UnoCSS",id:"unocss-1",level:3},{value:"The Rise of Utility-First CSS",id:"the-rise-of-utility-first-css",level:2},{value:"Historical Context",id:"historical-context",level:3},{value:"Influence of Functional CSS",id:"influence-of-functional-css",level:3},{value:"Tailwind&#39;s Breakthrough",id:"tailwinds-breakthrough",level:3},{value:"Key Benefits of Utility-First CSS",id:"key-benefits-of-utility-first-css",level:2},{value:"1. Development Speed",id:"1-development-speed",level:3},{value:"2. Consistency",id:"2-consistency",level:3},{value:"3. Responsive Design",id:"3-responsive-design",level:3},{value:"4. Reduced CSS Size",id:"4-reduced-css-size",level:3},{value:"5. Avoiding Premature Abstraction",id:"5-avoiding-premature-abstraction",level:3},{value:"Common Criticisms and Solutions",id:"common-criticisms-and-solutions",level:2},{value:"1. &quot;HTML Becomes Bloated with Classes&quot;",id:"1-html-becomes-bloated-with-classes",level:3},{value:"2. &quot;Difficult to Make Global Changes&quot;",id:"2-difficult-to-make-global-changes",level:3},{value:"3. &quot;Reinventing CSS with Classes&quot;",id:"3-reinventing-css-with-classes",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Consistent Class Ordering",id:"1-consistent-class-ordering",level:3},{value:"2. Extract Components for Repeated Patterns",id:"2-extract-components-for-repeated-patterns",level:3},{value:"3. Use Component State Classes",id:"3-use-component-state-classes",level:3},{value:"4. Responsive Design Approach",id:"4-responsive-design-approach",level:3},{value:"Framework Comparison",id:"framework-comparison",level:2},{value:"Integration with JavaScript Frameworks",id:"integration-with-javascript-frameworks",level:2},{value:"React",id:"react",level:3},{value:"Vue",id:"vue",level:3},{value:"Angular",id:"angular",level:3},{value:"Utility-First in the Modern CSS Landscape",id:"utility-first-in-the-modern-css-landscape",level:2},{value:"Resources",id:"resources",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"utility-first-css",children:"Utility-First CSS"})}),"\n",(0,t.jsx)(n.p,{children:"Utility-First CSS is an approach to styling that uses small, single-purpose utility classes to build complex components. Rather than writing custom CSS for each component, developers compose styles directly in HTML markup by applying pre-defined utility classes."}),"\n",(0,t.jsx)(n.h2,{id:"the-evolution-of-utility-first-css",children:"The Evolution of Utility-First CSS"}),"\n",(0,t.jsx)(n.p,{children:"The utility-first approach has evolved through several generations:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"First Generation (2014-2016)"}),": Pioneering frameworks like ",(0,t.jsx)(n.strong,{children:"Tachyons"})," and Basscss introduced the concept of atomic, single-purpose CSS classes."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Second Generation (2017-2020)"}),": ",(0,t.jsx)(n.strong,{children:"Tailwind CSS"})," popularized utility-first CSS by introducing a comprehensive design system, extensive documentation, and developer tools."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Third Generation (2020-2022)"}),": ",(0,t.jsx)(n.strong,{children:"Windi CSS"})," innovated with on-demand generation, attributify mode, and variant groups, pushing the performance boundaries."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Fourth Generation (2022-present)"}),": ",(0,t.jsx)(n.strong,{children:"UnoCSS"})," reimagined utility CSS as an engine rather than a framework, emphasizing ultimate customization and performance. Meanwhile, ",(0,t.jsx)(n.strong,{children:"PigmentCSS"})," emerged with a focus on providing a lightweight alternative with a balanced approach between convention and configuration."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"popular-utility-first-frameworks",children:"Popular Utility-First Frameworks"}),"\n",(0,t.jsx)(n.p,{children:"This section covers the most widely-used utility-first CSS frameworks:"}),"\n",(0,t.jsx)(n.h3,{id:"tailwind-css",children:(0,t.jsx)(n.a,{href:"/av-docs/docs/frontend/styling/frameworks/utility-first/tailwind",children:"Tailwind CSS"})}),"\n",(0,t.jsx)(n.p,{children:"The most popular utility-first framework with a comprehensive set of atomic classes, plugin system, and JIT compiler."}),"\n",(0,t.jsx)(n.h3,{id:"tachyons",children:(0,t.jsx)(n.a,{href:"/av-docs/docs/frontend/styling/frameworks/utility-first/tachyons",children:"Tachyons"})}),"\n",(0,t.jsx)(n.p,{children:"One of the original utility CSS libraries with a focus on human-readable class names and readable code."}),"\n",(0,t.jsx)(n.h3,{id:"windi-css",children:(0,t.jsx)(n.a,{href:"/av-docs/docs/frontend/styling/frameworks/utility-first/windi-css",children:"Windi CSS"})}),"\n",(0,t.jsx)(n.p,{children:"An alternative to Tailwind with on-demand generation and additional features like variant groups (now discontinued)."}),"\n",(0,t.jsx)(n.h3,{id:"unocss",children:(0,t.jsx)(n.a,{href:"/av-docs/docs/frontend/styling/frameworks/utility-first/unocss",children:"UnoCSS"})}),"\n",(0,t.jsx)(n.p,{children:'The "instant atomic CSS engine" with high performance, extensibility, and multiple presets.'}),"\n",(0,t.jsx)(n.h3,{id:"pigmentcss",children:(0,t.jsx)(n.a,{href:"/av-docs/docs/frontend/styling/frameworks/utility-first/pigmentcss",children:"PigmentCSS"})}),"\n",(0,t.jsx)(n.p,{children:"A lightweight framework offering a balanced approach between convention and configuration with a focus on simplicity."}),"\n",(0,t.jsx)(n.h2,{id:"core-principles",children:"Core Principles"}),"\n",(0,t.jsx)(n.h3,{id:"1-single-purpose-classes",children:"1. Single-Purpose Classes"}),"\n",(0,t.jsx)(n.p,{children:"Each utility class does exactly one thing:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<div class="m-4 p-6 bg-white rounded shadow-md">\n  \x3c!-- Content --\x3e\n</div>\n'})}),"\n",(0,t.jsx)(n.p,{children:"Rather than:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-css",children:".card {\n  margin: 1rem;\n  padding: 1.5rem;\n  background-color: white;\n  border-radius: 0.375rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-composability",children:"2. Composability"}),"\n",(0,t.jsx)(n.p,{children:"Complex designs are created by combining multiple utility classes:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<button\n  class="px-4 py-2 bg-blue-500 text-white font-bold rounded hover:bg-blue-700"\n>\n  Button\n</button>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"3-direct-markup-styling",children:"3. Direct Markup Styling"}),"\n",(0,t.jsx)(n.p,{children:"Styles are applied directly in HTML instead of through separate CSS files:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'\x3c!-- Traditional approach --\x3e\n<div class="card">Content</div>\n\n\x3c!-- Utility-first approach --\x3e\n<div class="m-4 p-6 bg-white rounded shadow-md">Content</div>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"4-design-constraints",children:"4. Design Constraints"}),"\n",(0,t.jsx)(n.p,{children:"Utility-first frameworks enforce a design system through predefined values:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'\x3c!-- Limited spacing options --\x3e\n<div class="p-1"></div>\n\x3c!-- 0.25rem --\x3e\n<div class="p-2"></div>\n\x3c!-- 0.5rem --\x3e\n<div class="p-4"></div>\n\x3c!-- 1rem --\x3e\n<div class="p-8"></div>\n\x3c!-- 2rem --\x3e\n\n\x3c!-- Limited color options --\x3e\n<div class="text-blue-500"></div>\n\x3c!-- Specific blue shade --\x3e\n<div class="text-blue-700"></div>\n\x3c!-- Darker blue shade --\x3e\n'})}),"\n",(0,t.jsx)(n.h2,{id:"popular-utility-first-frameworks-1",children:"Popular Utility-First Frameworks"}),"\n",(0,t.jsx)(n.p,{children:"This section covers the most widely-used utility-first CSS frameworks:"}),"\n",(0,t.jsx)(n.h3,{id:"tailwind-css-1",children:(0,t.jsx)(n.a,{href:"/av-docs/docs/frontend/styling/frameworks/utility-first/tailwind",children:"Tailwind CSS"})}),"\n",(0,t.jsx)(n.p,{children:"The most popular utility-first framework with a comprehensive set of atomic classes, plugin system, and JIT compiler."}),"\n",(0,t.jsx)(n.h3,{id:"tachyons-1",children:(0,t.jsx)(n.a,{href:"/av-docs/docs/frontend/styling/frameworks/utility-first/tachyons",children:"Tachyons"})}),"\n",(0,t.jsx)(n.p,{children:"One of the original utility CSS libraries with a focus on human-readable class names and readable code."}),"\n",(0,t.jsx)(n.h3,{id:"windi-css-1",children:(0,t.jsx)(n.a,{href:"/av-docs/docs/frontend/styling/frameworks/utility-first/windi-css",children:"Windi CSS"})}),"\n",(0,t.jsx)(n.p,{children:"An alternative to Tailwind with on-demand generation and additional features like variant groups."}),"\n",(0,t.jsx)(n.h3,{id:"unocss-1",children:(0,t.jsx)(n.a,{href:"/av-docs/docs/frontend/styling/frameworks/utility-first/unocss",children:"UnoCSS"})}),"\n",(0,t.jsx)(n.p,{children:'The "instant atomic CSS engine" with high performance, extensibility, and multiple presets.'}),"\n",(0,t.jsx)(n.h2,{id:"the-rise-of-utility-first-css",children:"The Rise of Utility-First CSS"}),"\n",(0,t.jsx)(n.h3,{id:"historical-context",children:"Historical Context"}),"\n",(0,t.jsx)(n.p,{children:"Utility-first CSS emerged as a reaction to several challenges in traditional CSS approaches:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CSS Bloat"}),": As projects grew, CSS files became increasingly large and difficult to maintain"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Specificity Wars"}),": Cascading and specificity issues led to ",(0,t.jsx)(n.code,{children:"!important"})," overrides"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Naming Challenges"}),": Finding meaningful, consistent names for components was difficult"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Duplication"}),": Similar styles were often duplicated across components with minor variations"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"influence-of-functional-css",children:"Influence of Functional CSS"}),"\n",(0,t.jsx)(n.p,{children:"Early frameworks like Tachyons and Basscss pioneered functional/atomic CSS principles:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'\x3c!-- Tachyons example --\x3e\n<div class="pa4 bg-white br2 shadow-1">\n  \x3c!-- Content --\x3e\n</div>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"tailwinds-breakthrough",children:"Tailwind's Breakthrough"}),"\n",(0,t.jsx)(n.p,{children:"Tailwind CSS popularized utility-first CSS by addressing common criticisms:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Comprehensive design system"}),": Cohesive color palettes, spacing scales, etc."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Developer experience"}),": Better naming conventions and documentation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance optimization"}),": PurgeCSS integration to eliminate unused styles"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"JIT compilation"}),": Generated only the CSS you actually use"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"key-benefits-of-utility-first-css",children:"Key Benefits of Utility-First CSS"}),"\n",(0,t.jsx)(n.h3,{id:"1-development-speed",children:"1. Development Speed"}),"\n",(0,t.jsx)(n.p,{children:"Build interfaces faster without context-switching between HTML and CSS files:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'\x3c!-- Rapidly compose components directly in markup --\x3e\n<div class="flex items-center p-4 bg-white rounded-lg shadow">\n  <img class="h-12 w-12 rounded-full mr-4" src="avatar.jpg" alt="User avatar" />\n  <div>\n    <h3 class="text-lg font-medium text-gray-900">John Doe</h3>\n    <p class="text-gray-500">Software Developer</p>\n  </div>\n</div>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"2-consistency",children:"2. Consistency"}),"\n",(0,t.jsx)(n.p,{children:"Design system constraints encourage consistent spacing, typography, and colors:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'\x3c!-- Consistent spacing using design system values --\x3e\n<div class="space-y-4">\n  \x3c!-- 1rem gap between children --\x3e\n  <div class="p-4">\x3c!-- 1rem padding --\x3e</div>\n  <div class="p-4">\x3c!-- 1rem padding --\x3e</div>\n  <div class="p-4">\x3c!-- 1rem padding --\x3e</div>\n</div>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"3-responsive-design",children:"3. Responsive Design"}),"\n",(0,t.jsx)(n.p,{children:"Built-in responsive utilities make adaptive layouts straightforward:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<div class="w-full md:w-1/2 lg:w-1/3">\n  \x3c!-- Full width on mobile, half on tablet, third on desktop --\x3e\n</div>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"4-reduced-css-size",children:"4. Reduced CSS Size"}),"\n",(0,t.jsx)(n.p,{children:"Despite having many classes, the final CSS file is often smaller:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"No duplicated style declarations"}),"\n",(0,t.jsx)(n.li,{children:"Only used utilities are included (with proper setup)"}),"\n",(0,t.jsx)(n.li,{children:"Better gzip compression due to repeated class names"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"5-avoiding-premature-abstraction",children:"5. Avoiding Premature Abstraction"}),"\n",(0,t.jsx)(n.p,{children:"Style directly until patterns emerge, then extract components:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'// React example of extracting repeated patterns\nfunction Button({ children, primary }) {\n  return (\n    <button\n      className={`px-4 py-2 rounded font-bold ${\n        primary ? "bg-blue-500 text-white" : "bg-gray-200 text-gray-800"\n      }`}\n    >\n      {children}\n    </button>\n  );\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"common-criticisms-and-solutions",children:"Common Criticisms and Solutions"}),"\n",(0,t.jsx)(n.h3,{id:"1-html-becomes-bloated-with-classes",children:'1. "HTML Becomes Bloated with Classes"'}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Criticism"}),": Long strings of utility classes make HTML harder to read."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solutions"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Use component-based frameworks to encapsulate class patterns"}),"\n",(0,t.jsx)(n.li,{children:"Apply consistent class ordering (layout, typography, colors, etc.)"}),"\n",(0,t.jsx)(n.li,{children:"Use IDE extensions for better class management"}),"\n",(0,t.jsx)(n.li,{children:"Extract common patterns into reusable components"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-difficult-to-make-global-changes",children:'2. "Difficult to Make Global Changes"'}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Criticism"}),": Changing a design element requires updating many HTML files."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solutions"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Extract repeated patterns into components or custom CSS"}),"\n",(0,t.jsx)(n.li,{children:"Use find-and-replace for one-off changes"}),"\n",(0,t.jsx)(n.li,{children:"Customize your utility framework's configuration"}),"\n",(0,t.jsx)(n.li,{children:"Combine with CSS custom properties for theming"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-reinventing-css-with-classes",children:'3. "Reinventing CSS with Classes"'}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Criticism"}),": Learning utility classes means learning another abstraction."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solutions"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Most classes closely mirror CSS property names"}),"\n",(0,t.jsx)(n.li,{children:"Modern frameworks provide excellent documentation"}),"\n",(0,t.jsx)(n.li,{children:"IDE intellisense and autocompletion tools reduce learning curve"}),"\n",(0,t.jsx)(n.li,{children:"The mental model is often simpler than managing complex CSS"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsx)(n.h3,{id:"1-consistent-class-ordering",children:"1. Consistent Class Ordering"}),"\n",(0,t.jsx)(n.p,{children:"Establish a convention for class ordering:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'\x3c!-- Example ordering convention --\x3e\n<div\n  class="\n  /* Layout (display, position) */\n  flex absolute\n  \n  /* Box model (width, height, margin, padding) */\n  w-full h-screen m-0 p-4\n  \n  /* Typography */\n  font-bold text-lg text-center\n  \n  /* Visual (background, border, shadow) */\n  bg-white rounded border shadow-md\n  \n  /* Interactive/misc */\n  hover:bg-gray-100 cursor-pointer\n"\n>\n  \x3c!-- Content --\x3e\n</div>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"2-extract-components-for-repeated-patterns",children:"2. Extract Components for Repeated Patterns"}),"\n",(0,t.jsx)(n.p,{children:"Don't repeat the same class combinations:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'// React example\nfunction Card({ title, children }) {\n  return (\n    <div className="p-6 bg-white rounded-lg shadow-md">\n      <h2 className="text-xl font-bold mb-4">{title}</h2>\n      <div>{children}</div>\n    </div>\n  );\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"3-use-component-state-classes",children:"3. Use Component State Classes"}),"\n",(0,t.jsx)(n.p,{children:"Create reusable state variations:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<button class="btn btn--primary">Primary</button>\n<button class="btn btn--secondary">Secondary</button>\n'})}),"\n",(0,t.jsx)(n.p,{children:"With CSS:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-css",children:".btn {\n  @apply px-4 py-2 rounded font-bold;\n}\n\n.btn--primary {\n  @apply bg-blue-500 text-white hover:bg-blue-700;\n}\n\n.btn--secondary {\n  @apply bg-gray-200 text-gray-800 hover:bg-gray-300;\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"4-responsive-design-approach",children:"4. Responsive Design Approach"}),"\n",(0,t.jsx)(n.p,{children:"Start with mobile design, then add responsive utilities:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<div\n  class="\n  /* Mobile (default) */\n  block w-full p-4\n  \n  /* Tablet */\n  md:flex md:w-1/2\n  \n  /* Desktop */\n  lg:w-1/3 lg:p-6\n"\n>\n  \x3c!-- Content --\x3e\n</div>\n'})}),"\n",(0,t.jsx)(n.h2,{id:"framework-comparison",children:"Framework Comparison"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Feature"}),(0,t.jsx)(n.th,{children:"Tailwind CSS"}),(0,t.jsx)(n.th,{children:"Tachyons"}),(0,t.jsx)(n.th,{children:"Windi CSS"}),(0,t.jsx)(n.th,{children:"UnoCSS"}),(0,t.jsx)(n.th,{children:"PigmentCSS"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Development"})}),(0,t.jsx)(n.td,{children:"Active"}),(0,t.jsx)(n.td,{children:"Maintained"}),(0,t.jsx)(n.td,{children:"Discontinued"}),(0,t.jsx)(n.td,{children:"Active"}),(0,t.jsx)(n.td,{children:"Active"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Popularity"})}),(0,t.jsx)(n.td,{children:"Very High"}),(0,t.jsx)(n.td,{children:"Medium"}),(0,t.jsx)(n.td,{children:"Medium"}),(0,t.jsx)(n.td,{children:"Growing"}),(0,t.jsx)(n.td,{children:"Newer/Growing"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"File Size"})}),(0,t.jsx)(n.td,{children:"On-demand"}),(0,t.jsx)(n.td,{children:"~14KB"}),(0,t.jsx)(n.td,{children:"On-demand"}),(0,t.jsx)(n.td,{children:"On-demand"}),(0,t.jsx)(n.td,{children:"~10KB"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Configuration"})}),(0,t.jsx)(n.td,{children:"Highly configurable"}),(0,t.jsx)(n.td,{children:"Limited"}),(0,t.jsx)(n.td,{children:"Highly configurable"}),(0,t.jsx)(n.td,{children:"Rule-based"}),(0,t.jsx)(n.td,{children:"Moderately configurable"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Responsive"})}),(0,t.jsx)(n.td,{children:"Breakpoint prefixes"}),(0,t.jsx)(n.td,{children:"Breakpoint suffixes"}),(0,t.jsx)(n.td,{children:"Breakpoint prefixes"}),(0,t.jsx)(n.td,{children:"Breakpoint prefixes"}),(0,t.jsx)(n.td,{children:"Breakpoint prefixes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"JIT/On-demand"})}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Yes (pioneered)"}),(0,t.jsx)(n.td,{children:"Yes (fastest)"}),(0,t.jsx)(n.td,{children:"Yes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Learning Curve"})}),(0,t.jsx)(n.td,{children:"Medium"}),(0,t.jsx)(n.td,{children:"Medium"}),(0,t.jsx)(n.td,{children:"Medium"}),(0,t.jsx)(n.td,{children:"Medium-High"}),(0,t.jsx)(n.td,{children:"Medium"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"IDE Support"})}),(0,t.jsx)(n.td,{children:"Excellent"}),(0,t.jsx)(n.td,{children:"Limited"}),(0,t.jsx)(n.td,{children:"Good"}),(0,t.jsx)(n.td,{children:"Growing"}),(0,t.jsx)(n.td,{children:"Good"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Unique Features"})}),(0,t.jsx)(n.td,{children:"Ecosystem & plugins"}),(0,t.jsx)(n.td,{children:"Human-readable classes"}),(0,t.jsx)(n.td,{children:"Variant groups"}),(0,t.jsx)(n.td,{children:"Extensibility & speed"}),(0,t.jsx)(n.td,{children:"Lightweight & balanced"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Build Process"})}),(0,t.jsx)(n.td,{children:"Required"}),(0,t.jsx)(n.td,{children:"Optional"}),(0,t.jsx)(n.td,{children:"Required"}),(0,t.jsx)(n.td,{children:"Required"}),(0,t.jsx)(n.td,{children:"Optional"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"integration-with-javascript-frameworks",children:"Integration with JavaScript Frameworks"}),"\n",(0,t.jsx)(n.h3,{id:"react",children:"React"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'// Basic usage\nfunction Button({ primary, children }) {\n  return (\n    <button\n      className={`px-4 py-2 rounded ${\n        primary ? "bg-blue-500 text-white" : "bg-gray-200 text-gray-800"\n      }`}\n    >\n      {children}\n    </button>\n  );\n}\n\n// With libraries like clsx/classnames\nimport clsx from "clsx";\n\nfunction Button({ primary, disabled, className }) {\n  return (\n    <button\n      className={clsx(\n        "px-4 py-2 rounded",\n        primary ? "bg-blue-500 text-white" : "bg-gray-200 text-gray-800",\n        disabled && "opacity-50 cursor-not-allowed",\n        className\n      )}\n    >\n      {children}\n    </button>\n  );\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"vue",children:"Vue"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-vue",children:"<template>\n  <button\n    :class=\"[\n      'px-4 py-2 rounded',\n      primary ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800',\n      { 'opacity-50 cursor-not-allowed': disabled },\n    ]\"\n  >\n    <slot></slot>\n  </button>\n</template>\n\n<script>\nexport default {\n  props: {\n    primary: Boolean,\n    disabled: Boolean,\n  },\n};\n<\/script>\n"})}),"\n",(0,t.jsx)(n.h3,{id:"angular",children:"Angular"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:"<button\n  class=\"px-4 py-2 rounded\"\n  [ngClass]=\"{\n    'bg-blue-500 text-white': primary,\n    'bg-gray-200 text-gray-800': !primary,\n    'opacity-50 cursor-not-allowed': disabled\n  }\"\n>\n  <ng-content></ng-content>\n</button>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"utility-first-in-the-modern-css-landscape",children:"Utility-First in the Modern CSS Landscape"}),"\n",(0,t.jsxs)(n.p,{children:["Utility-first CSS has gained significant traction in recent years, as evidenced by the ",(0,t.jsx)(n.a,{href:"https://2023.stateofcss.com/en-US/technologies/",children:"2023 State of CSS survey"})," which shows Tailwind CSS as the most popular CSS framework with the highest satisfaction ratings."]}),"\n",(0,t.jsx)(n.p,{children:"Many teams are adopting utility-first CSS because:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Developer productivity"}),": Faster iteration and development"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Design system enforcement"}),": Built-in constraints promote consistency"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance"}),": Small bundle sizes and optimized output"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Eliminating CSS maintenance"}),": Reduced need for custom CSS"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cross-framework compatibility"}),": Works with any JavaScript framework"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"As the web development ecosystem continues to evolve, utility-first CSS has become a mainstream approach that balances developer experience with performance optimization."}),"\n",(0,t.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://tailwindcss.com/docs/utility-first",children:"Utility-First Fundamentals"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://frontstuff.io/in-defense-of-utility-first-css",children:"In Defense of Utility-First CSS"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://johnpolacek.github.io/the-case-for-atomic-css/",children:"The Case for Atomic/Utility-First CSS"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://adamwathan.me/css-utility-classes-and-separation-of-concerns/",children:'CSS Utility Classes and "Separation of Concerns"'})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://2023.stateofcss.com/",children:"2023 State of CSS Survey"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://codersdiaries.com/blog/tailwind-css-vs-bootstrap",children:"Tailwind vs. Bootstrap"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://piccalil.li/tutorial/when-should-you-use-utility-classes/",children:"When to use Utility Classes"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(6540);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);