"use strict";(self.webpackChunkav_docusaurus_classic=self.webpackChunkav_docusaurus_classic||[]).push([[3735],{8387:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"frontend/styling/frameworks/utility-first/windi-css","title":"Windi CSS","description":"Windi CSS is a next-generation utility-first CSS framework that was created as an alternative to Tailwind CSS. Developed by Voorjaar in 2020, it pioneered on-demand utility generation, which was later adopted by Tailwind\'s JIT (Just-in-Time) compiler. While Windi CSS is no longer under active development (as of 2023), it introduced several innovative features that influenced the utility CSS ecosystem.","source":"@site/docs/frontend/styling/frameworks/utility-first/windi-css.md","sourceDirName":"frontend/styling/frameworks/utility-first","slug":"/frontend/styling/frameworks/utility-first/windi-css","permalink":"/av-docs/docs/frontend/styling/frameworks/utility-first/windi-css","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/frontend/styling/frameworks/utility-first/windi-css.md","tags":[],"version":"current","frontMatter":{},"sidebar":"frontendSidebar","previous":{"title":"UnoCSS","permalink":"/av-docs/docs/frontend/styling/frameworks/utility-first/unocss"},"next":{"title":"CSS Layout","permalink":"/av-docs/docs/frontend/styling/layout/"}}');var t=i(4848),r=i(8453);const l={},a="Windi CSS",d={},o=[{value:"Core Features",id:"core-features",level:2},{value:"On-Demand Engine",id:"on-demand-engine",level:3},{value:"Attributify Mode",id:"attributify-mode",level:3},{value:"Variant Groups",id:"variant-groups",level:3},{value:"Auto-inferred Values",id:"auto-inferred-values",level:3},{value:"Responsive Design",id:"responsive-design",level:3},{value:"Installation and Setup",id:"installation-and-setup",level:2},{value:"Using npm/yarn",id:"using-npmyarn",level:3},{value:"Framework Integrations",id:"framework-integrations",level:3},{value:"Vue/Vite",id:"vuevite",level:4},{value:"Next.js",id:"nextjs",level:4},{value:"Webpack",id:"webpack",level:4},{value:"Configuration",id:"configuration",level:3},{value:"Core Utilities",id:"core-utilities",level:2},{value:"Layout",id:"layout",level:3},{value:"Typography",id:"typography",level:3},{value:"Backgrounds and Colors",id:"backgrounds-and-colors",level:3},{value:"Borders and Shadows",id:"borders-and-shadows",level:3},{value:"Transitions and Animations",id:"transitions-and-animations",level:3},{value:"Unique Features",id:"unique-features",level:2},{value:"Shortcuts (Custom Utilities)",id:"shortcuts-custom-utilities",level:3},{value:"Applying Directives",id:"applying-directives",level:3},{value:"Dynamic Utilities",id:"dynamic-utilities",level:3},{value:"Important Modifier",id:"important-modifier",level:3},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Layers",id:"layers",level:3},{value:"Writing Plugins",id:"writing-plugins",level:3},{value:"Using Theme Helper",id:"using-theme-helper",level:3},{value:"Dark Mode",id:"dark-mode",level:3},{value:"The Discontinuation of Windi CSS",id:"the-discontinuation-of-windi-css",level:2},{value:"Reasons for Discontinuation",id:"reasons-for-discontinuation",level:3},{value:"Legacy and Influence",id:"legacy-and-influence",level:3},{value:"Migration Paths",id:"migration-paths",level:2},{value:"To Tailwind CSS",id:"to-tailwind-css",level:3},{value:"To UnoCSS",id:"to-unocss",level:3},{value:"UnoCSS: The Spiritual Successor",id:"unocss-the-spiritual-successor",level:2},{value:"When to Use Windi CSS",id:"when-to-use-windi-css",level:2},{value:"Resources",id:"resources",level:2}];function c(n){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"windi-css",children:"Windi CSS"})}),"\n",(0,t.jsx)(e.p,{children:"Windi CSS is a next-generation utility-first CSS framework that was created as an alternative to Tailwind CSS. Developed by Voorjaar in 2020, it pioneered on-demand utility generation, which was later adopted by Tailwind's JIT (Just-in-Time) compiler. While Windi CSS is no longer under active development (as of 2023), it introduced several innovative features that influenced the utility CSS ecosystem."}),"\n",(0,t.jsx)(e.h2,{id:"core-features",children:"Core Features"}),"\n",(0,t.jsx)(e.h3,{id:"on-demand-engine",children:"On-Demand Engine"}),"\n",(0,t.jsx)(e.p,{children:"Unlike the original Tailwind CSS approach of generating all possible utility classes then purging unused ones, Windi CSS only generates the classes you actually use:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-html",children:'<div class="p-4 bg-white rounded-xl shadow-md">\n  \x3c!-- Only these specific utilities are generated --\x3e\n</div>\n'})}),"\n",(0,t.jsx)(e.p,{children:"Benefits:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Faster development build times"}),"\n",(0,t.jsx)(e.li,{children:"No configuration for purging"}),"\n",(0,t.jsx)(e.li,{children:"No need for PurgeCSS"}),"\n",(0,t.jsx)(e.li,{children:"Smaller CSS output"}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"attributify-mode",children:"Attributify Mode"}),"\n",(0,t.jsx)(e.p,{children:"Windi CSS introduced a unique syntax that groups utilities by property using HTML attributes:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-html",children:'\x3c!-- Traditional utility classes --\x3e\n<button\n  class="bg-blue-400 hover:bg-blue-500 text-white font-medium py-2 px-4 rounded"\n>\n  Button\n</button>\n\n\x3c!-- Attributify mode --\x3e\n<button\n  bg="blue-400 hover:blue-500"\n  text="white"\n  font="medium"\n  p="y-2 x-4"\n  rounded\n>\n  Button\n</button>\n'})}),"\n",(0,t.jsx)(e.p,{children:"Benefits:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Better organization of utilities"}),"\n",(0,t.jsx)(e.li,{children:"Cleaner HTML"}),"\n",(0,t.jsx)(e.li,{children:"Easier to read and maintain"}),"\n",(0,t.jsx)(e.li,{children:"Reduced class string length"}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"variant-groups",children:"Variant Groups"}),"\n",(0,t.jsx)(e.p,{children:"Allows you to apply the same variant to multiple utilities by grouping them:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-html",children:'\x3c!-- Traditional approach --\x3e\n<div class="hover:bg-blue-500 hover:text-white hover:font-bold">\n  \x3c!-- Content --\x3e\n</div>\n\n\x3c!-- With variant groups --\x3e\n<div class="hover:(bg-blue-500 text-white font-bold)">\n  \x3c!-- Content --\x3e\n</div>\n'})}),"\n",(0,t.jsx)(e.p,{children:"Benefits:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Reduced repetition"}),"\n",(0,t.jsx)(e.li,{children:"More maintainable code"}),"\n",(0,t.jsx)(e.li,{children:"Cleaner HTML"}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"auto-inferred-values",children:"Auto-inferred Values"}),"\n",(0,t.jsx)(e.p,{children:"Windi CSS allows arbitrary values without the need for square brackets:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-html",children:'\x3c!-- Using numeric values --\x3e\n<div class="p-4.5">\x3c!-- Padding: 1.125rem --\x3e</div>\n\n\x3c!-- Using calculated values --\x3e\n<div class="p-[calc(100%-10px)]">\x3c!-- Calculated padding --\x3e</div>\n\n\x3c!-- Using CSS variables --\x3e\n<div class="p-[var(--spacing)]">\x3c!-- Dynamic padding --\x3e</div>\n'})}),"\n",(0,t.jsx)(e.h3,{id:"responsive-design",children:"Responsive Design"}),"\n",(0,t.jsx)(e.p,{children:"Similar to Tailwind, Windi CSS uses breakpoint prefixes for responsive design:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-html",children:'<div class="w-full md:w-1/2 lg:w-1/3">\n  \x3c!-- Full width on mobile, half on medium, third on large --\x3e\n</div>\n'})}),"\n",(0,t.jsx)(e.p,{children:"Default breakpoints:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"sm"}),": 640px"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"md"}),": 768px"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"lg"}),": 1024px"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"xl"}),": 1280px"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"2xl"}),": 1536px"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"installation-and-setup",children:"Installation and Setup"}),"\n",(0,t.jsx)(e.h3,{id:"using-npmyarn",children:"Using npm/yarn"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# Using npm\nnpm i -D windicss windicss-webpack-plugin\n\n# Using yarn\nyarn add -D windicss windicss-webpack-plugin\n"})}),"\n",(0,t.jsx)(e.h3,{id:"framework-integrations",children:"Framework Integrations"}),"\n",(0,t.jsx)(e.h4,{id:"vuevite",children:"Vue/Vite"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"npm i -D vite-plugin-windicss\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:'// vite.config.js\nimport WindiCSS from "vite-plugin-windicss";\n\nexport default {\n  plugins: [WindiCSS()],\n};\n'})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:'// main.js\nimport "virtual:windi.css";\n// If you want to support dark mode\nimport "virtual:windi-devtools";\n'})}),"\n",(0,t.jsx)(e.h4,{id:"nextjs",children:"Next.js"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"npm i -D windicss-webpack-plugin\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:'// next.config.js\nconst WindiCSSWebpackPlugin = require("windicss-webpack-plugin");\n\nmodule.exports = {\n  webpack(config) {\n    config.plugins.push(new WindiCSSWebpackPlugin());\n    return config;\n  },\n};\n'})}),"\n",(0,t.jsx)(e.h4,{id:"webpack",children:"Webpack"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:'// webpack.config.js\nconst WindiCSSWebpackPlugin = require("windicss-webpack-plugin");\n\nmodule.exports = {\n  plugins: [\n    new WindiCSSWebpackPlugin({\n      scan: {\n        dirs: ["./src"],\n        fileExtensions: ["html", "js", "ts", "jsx", "tsx", "vue"],\n      },\n    }),\n  ],\n};\n'})}),"\n",(0,t.jsx)(e.h3,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsxs)(e.p,{children:["Create a ",(0,t.jsx)(e.code,{children:"windi.config.js"})," or ",(0,t.jsx)(e.code,{children:"windi.config.ts"})," file in your project root:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:'import { defineConfig } from "windicss/helpers";\nimport colors from "windicss/colors";\n\nexport default defineConfig({\n  darkMode: "class", // or \'media\'\n  attributify: true, // Enable attributify mode\n  theme: {\n    extend: {\n      colors: {\n        primary: colors.blue[500],\n        secondary: colors.pink[500],\n      },\n    },\n  },\n  plugins: [\n    require("windicss/plugin/typography"),\n    require("windicss/plugin/forms"),\n  ],\n});\n'})}),"\n",(0,t.jsx)(e.h2,{id:"core-utilities",children:"Core Utilities"}),"\n",(0,t.jsx)(e.p,{children:"Windi CSS provides a similar set of utilities to Tailwind CSS:"}),"\n",(0,t.jsx)(e.h3,{id:"layout",children:"Layout"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-html",children:'<div class="container mx-auto p-4">\n  <div class="flex flex-col md:flex-row gap-4">\n    <div class="flex-1">Column 1</div>\n    <div class="flex-1">Column 2</div>\n  </div>\n</div>\n'})}),"\n",(0,t.jsx)(e.h3,{id:"typography",children:"Typography"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-html",children:'<h1 class="text-2xl font-bold text-gray-900">Heading</h1>\n<p class="text-base leading-relaxed text-gray-600">\n  Paragraph with relaxed line height.\n</p>\n'})}),"\n",(0,t.jsx)(e.h3,{id:"backgrounds-and-colors",children:"Backgrounds and Colors"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-html",children:'<div class="bg-blue-500 text-white p-4">Blue background with white text</div>\n<div class="bg-gradient-to-r from-purple-500 to-pink-500 text-white p-4">\n  Gradient background\n</div>\n'})}),"\n",(0,t.jsx)(e.h3,{id:"borders-and-shadows",children:"Borders and Shadows"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-html",children:'<div class="border border-gray-200 rounded-lg shadow-md p-4">\n  Card with border and shadow\n</div>\n'})}),"\n",(0,t.jsx)(e.h3,{id:"transitions-and-animations",children:"Transitions and Animations"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-html",children:'<button class="transition duration-300 ease-in-out transform hover:scale-105">\n  Hover to scale\n</button>\n'})}),"\n",(0,t.jsx)(e.h2,{id:"unique-features",children:"Unique Features"}),"\n",(0,t.jsx)(e.h3,{id:"shortcuts-custom-utilities",children:"Shortcuts (Custom Utilities)"}),"\n",(0,t.jsx)(e.p,{children:"Define custom combinations of utilities:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:'// windi.config.js\nexport default {\n  shortcuts: {\n    btn: "py-2 px-4 font-semibold rounded-lg shadow-md",\n    "btn-green": "text-white bg-green-500 hover:bg-green-700",\n    card: "bg-white rounded-lg shadow-md p-4 m-4",\n  },\n};\n'})}),"\n",(0,t.jsx)(e.p,{children:"Usage:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-html",children:'<button class="btn btn-green">Button</button>\n<div class="card">Card content</div>\n'})}),"\n",(0,t.jsx)(e.h3,{id:"applying-directives",children:"Applying Directives"}),"\n",(0,t.jsxs)(e.p,{children:["Similar to Tailwind's ",(0,t.jsx)(e.code,{children:"@apply"}),", but with extended functionality:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-css",children:".btn {\n  @apply py-2 px-4 font-semibold rounded-lg shadow-md;\n}\n\n/* With variants */\n.btn-blue {\n  @apply text-white bg-blue-500 hover:bg-blue-700;\n}\n\n/* With responsive variants */\n.responsive-element {\n  @apply text-sm md:text-base lg:text-lg;\n}\n"})}),"\n",(0,t.jsx)(e.h3,{id:"dynamic-utilities",children:"Dynamic Utilities"}),"\n",(0,t.jsx)(e.p,{children:"Generate utilities with variables:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-html",children:'\x3c!-- Width with percentage --\x3e\n<div class="w-[75%]">75% width</div>\n\n\x3c!-- Padding with calculation --\x3e\n<div class="p-[calc(1rem+10px)]">Dynamic padding</div>\n\n\x3c!-- Height with viewport units --\x3e\n<div class="h-[50vh]">50% of viewport height</div>\n'})}),"\n",(0,t.jsx)(e.h3,{id:"important-modifier",children:"Important Modifier"}),"\n",(0,t.jsxs)(e.p,{children:["Make any utility important with the ",(0,t.jsx)(e.code,{children:"!"})," prefix:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-html",children:'<div class="!p-4">\n  \x3c!-- This padding will have !important --\x3e\n</div>\n'})}),"\n",(0,t.jsx)(e.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,t.jsx)(e.h3,{id:"layers",children:"Layers"}),"\n",(0,t.jsx)(e.p,{children:"Define and control the order of your CSS:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:"// windi.config.js\nexport default {\n  layers: {\n    base: 1,\n    components: 2,\n    utilities: 3,\n    my-custom-layer: 0, // Will be injected before 'base'\n  },\n}\n"})}),"\n",(0,t.jsx)(e.h3,{id:"writing-plugins",children:"Writing Plugins"}),"\n",(0,t.jsx)(e.p,{children:"Create custom utilities and components:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:'// windi.config.js\nimport plugin from "windicss/plugin";\n\nexport default {\n  plugins: [\n    plugin(({ addUtilities, addComponents, e, theme }) => {\n      // Add custom utilities\n      addUtilities({\n        ".skew-10deg": {\n          transform: "skewY(10deg)",\n        },\n        ".skew-15deg": {\n          transform: "skewY(15deg)",\n        },\n      });\n\n      // Add custom components\n      addComponents({\n        ".card": {\n          backgroundColor: theme("colors.white"),\n          borderRadius: theme("borderRadius.lg"),\n          padding: theme("spacing.6"),\n          boxShadow: theme("boxShadow.xl"),\n        },\n      });\n    }),\n  ],\n};\n'})}),"\n",(0,t.jsx)(e.h3,{id:"using-theme-helper",children:"Using Theme Helper"}),"\n",(0,t.jsx)(e.p,{children:"Access theme values in JavaScript:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:'import { theme } from "virtual:windi-utilities";\n\nconsole.log(theme("colors.blue.500")); // #3b82f6\n'})}),"\n",(0,t.jsx)(e.h3,{id:"dark-mode",children:"Dark Mode"}),"\n",(0,t.jsxs)(e.p,{children:["Configure dark mode in ",(0,t.jsx)(e.code,{children:"windi.config.js"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:"export default {\n  darkMode: \"class\", // or 'media'\n};\n"})}),"\n",(0,t.jsx)(e.p,{children:"Usage:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-html",children:'\x3c!-- With class mode --\x3e\n<div class="bg-white dark:bg-gray-800 text-black dark:text-white">\n  \x3c!-- Content changes in dark mode --\x3e\n</div>\n\n\x3c!-- Toggle with JavaScript --\x3e\n<script>\n  document.documentElement.classList.toggle("dark");\n<\/script>\n'})}),"\n",(0,t.jsx)(e.h2,{id:"the-discontinuation-of-windi-css",children:"The Discontinuation of Windi CSS"}),"\n",(0,t.jsx)(e.p,{children:"In February 2022, Windi CSS's creator Voorjaar announced that active development of Windi CSS would be discontinued. This came after a period of slowed development and the creator's decision to focus on a new project called UnoCSS."}),"\n",(0,t.jsx)(e.h3,{id:"reasons-for-discontinuation",children:"Reasons for Discontinuation"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Tailwind's JIT Adoption"}),": After Windi CSS pioneered on-demand generation, Tailwind CSS incorporated a similar approach with its JIT engine in version 2.1, which removed one of Windi's key advantages."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Maintenance Burden"}),": Supporting multiple framework integrations and keeping up with Tailwind's features became increasingly difficult for the small team."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"UnoCSS Development"}),': The creator shifted focus to UnoCSS, described as an "atomic CSS engine" rather than a framework, which took the performance and customization concepts from Windi CSS even further.']}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Resource Constraints"}),": As an open-source project maintained by a small team, Windi CSS faced challenges in maintaining feature parity with Tailwind, which had significant commercial backing."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["From the creator's ",(0,t.jsx)(e.a,{href:"https://github.com/windicss/windicss/discussions/1111",children:"announcement"}),":"]}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsx)(e.p,{children:"\"After taking a step back to re-evaluate, I realize that I've put myself in the awkward position of competing with Tailwind Labs. To be frank, I didn't think this through when I first started this project. My intention was never to 'beat' or 'replace' Tailwind, but to provide a solution for the pain points I was experiencing at the time.\""}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"legacy-and-influence",children:"Legacy and Influence"}),"\n",(0,t.jsx)(e.p,{children:"Despite its discontinuation, Windi CSS made significant contributions to the utility CSS ecosystem:"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"On-Demand Generation"}),": Windi CSS's most innovative feature was later adopted by Tailwind, showing its significant impact on utility CSS development."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Attributify Mode"}),": Introduced a novel approach to organizing utilities that influenced other frameworks."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"Variant Groups"}),": Provided a cleaner syntax for applying variants that was widely appreciated."]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:["\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:"UnoCSS Inspiration"}),": Served as the foundation for UnoCSS, which continues to innovate in the atomic CSS space."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"migration-paths",children:"Migration Paths"}),"\n",(0,t.jsx)(e.p,{children:"For existing Windi CSS users, there are two main migration paths:"}),"\n",(0,t.jsx)(e.h3,{id:"to-tailwind-css",children:"To Tailwind CSS"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# Remove Windi CSS\nnpm uninstall windicss windicss-webpack-plugin\n\n# Install Tailwind CSS\nnpm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init -p\n"})}),"\n",(0,t.jsx)(e.p,{children:"Key differences to be aware of:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"No attributify mode in Tailwind"}),"\n",(0,t.jsx)(e.li,{children:"No variant groups (though similar functionality exists with plugins)"}),"\n",(0,t.jsx)(e.li,{children:"Different plugin architecture"}),"\n",(0,t.jsxs)(e.li,{children:["Syntax differences for arbitrary values: Windi: ",(0,t.jsx)(e.code,{children:"p-4.5"})," vs Tailwind: ",(0,t.jsx)(e.code,{children:"p-[1.125rem]"})]}),"\n"]}),"\n",(0,t.jsx)(e.h3,{id:"to-unocss",children:"To UnoCSS"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"# Remove Windi CSS\nnpm uninstall windicss windicss-webpack-plugin\n\n# Install UnoCSS\nnpm install -D unocss\n"})}),"\n",(0,t.jsx)(e.p,{children:"Benefits of migrating to UnoCSS:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Faster performance"}),"\n",(0,t.jsx)(e.li,{children:"Most Windi CSS features are supported"}),"\n",(0,t.jsx)(e.li,{children:"Extended customization capabilities"}),"\n",(0,t.jsx)(e.li,{children:"Maintained by the same creator"}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"unocss-the-spiritual-successor",children:"UnoCSS: The Spiritual Successor"}),"\n",(0,t.jsx)(e.p,{children:"UnoCSS was created by Voorjaar (the creator of Windi CSS) as the next evolution in atomic CSS engines. Rather than being a framework with predefined utilities, UnoCSS is an atomic CSS engine that lets you define your own utilities:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:'// uno.config.js\nimport { defineConfig } from "unocss";\n\nexport default defineConfig({\n  rules: [\n    ["custom-rule", { color: "red" }],\n    [/^text-(.*)$/, ([_, size]) => ({ "font-size": size })],\n  ],\n  shortcuts: {\n    btn: "py-2 px-4 font-semibold rounded-lg shadow-md",\n  },\n  presets: [\n    require("@unocss/preset-wind"), // Windi CSS compatible preset\n    require("@unocss/preset-uno"), // Default preset\n  ],\n});\n'})}),"\n",(0,t.jsx)(e.p,{children:"UnoCSS offers:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Even faster performance than Windi CSS"}),"\n",(0,t.jsx)(e.li,{children:"Complete customization of rules and presets"}),"\n",(0,t.jsx)(e.li,{children:"Multiple built-in presets (including Windi CSS and Tailwind compatibility)"}),"\n",(0,t.jsx)(e.li,{children:"All the features that made Windi CSS unique"}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"when-to-use-windi-css",children:"When to Use Windi CSS"}),"\n",(0,t.jsx)(e.p,{children:"While Windi CSS is no longer actively maintained, it can still be used in certain scenarios:"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Existing projects"}),": If you have a project already using Windi CSS and it's working well"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Learning purposes"}),": To understand the history and evolution of utility CSS"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Specific features"}),": If you need attributify mode or variant groups and prefer them over UnoCSS"]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"For new projects, consider:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Tailwind CSS"}),": For broad ecosystem support and active development"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"UnoCSS"}),": For maximum performance and customization"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Tachyons"}),": For a minimal, stable utility CSS approach"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"resources",children:"Resources"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.a,{href:"https://windicss.org/guide/",children:"Windi CSS Documentation"})," (historical)"]}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://github.com/windicss/windicss",children:"Windi CSS GitHub Repository"})}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.a,{href:"https://github.com/unocss/unocss",children:"UnoCSS Repository"})," (the successor to Windi CSS)"]}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://github.com/windicss/windicss/discussions/1111",children:"Discontinuation Announcement"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://windicss.org/guide/comparison.html",children:"Windi CSS vs. Tailwind CSS"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://github.com/unocss/unocss/tree/main/packages/preset-wind",children:"Migration Guide to UnoCSS"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://antfu.me/posts/reimagine-atomic-css",children:"Atomic CSS Evolution"})}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>a});var s=i(6540);const t={},r=s.createContext(t);function l(n){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);