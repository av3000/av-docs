"use strict";(self.webpackChunkav_docusaurus_classic=self.webpackChunkav_docusaurus_classic||[]).push([[6832],{3468:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"frontend/react/index","title":"React","description":"What is React?","source":"@site/docs/frontend/react/index.md","sourceDirName":"frontend/react","slug":"/frontend/react/","permalink":"/av-docs/docs/frontend/react/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/frontend/react/index.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_label":"Intro","sidebar_position":1},"sidebar":"frontendSidebar","previous":{"title":"Visitor","permalink":"/av-docs/docs/frontend/angular/design-patterns/behavioural-patterns/visitor"},"next":{"title":"Apollo Client","permalink":"/av-docs/docs/frontend/react/state-management/apollo-client"}}');var r=s(4848),i=s(8453);const o={sidebar_label:"Intro",sidebar_position:1},a="React",l={},c=[{value:"What is React?",id:"what-is-react",level:2},{value:"Why React?",id:"why-react",level:2},{value:"Component-Based Architecture",id:"component-based-architecture",level:3},{value:"Declarative UI",id:"declarative-ui",level:3},{value:"Virtual DOM &amp; Performance",id:"virtual-dom--performance",level:3},{value:"Rich Ecosystem",id:"rich-ecosystem",level:3},{value:"Developer Experience",id:"developer-experience",level:3},{value:"Core Principles",id:"core-principles",level:2},{value:"Components",id:"components",level:3},{value:"State Management",id:"state-management",level:3},{value:"Unidirectional Data Flow",id:"unidirectional-data-flow",level:3},{value:"Fundamental Concepts",id:"fundamental-concepts",level:2},{value:"JSX",id:"jsx",level:3},{value:"Components",id:"components-1",level:3},{value:"Props",id:"props",level:3},{value:"State",id:"state",level:3},{value:"Essential Hooks",id:"essential-hooks",level:2},{value:"useState",id:"usestate",level:3},{value:"useEffect",id:"useeffect",level:3},{value:"useContext",id:"usecontext",level:3},{value:"useRef",id:"useref",level:3},{value:"useMemo",id:"usememo",level:3},{value:"useCallback",id:"usecallback",level:3},{value:"Event Handling",id:"event-handling",level:2},{value:"Synthetic Events",id:"synthetic-events",level:3},{value:"Event Delegation",id:"event-delegation",level:3},{value:"Conditional Rendering",id:"conditional-rendering",level:2},{value:"Boolean Conditions",id:"boolean-conditions",level:3},{value:"Ternary Operator",id:"ternary-operator",level:3},{value:"Lists and Keys",id:"lists-and-keys",level:2},{value:"Rendering Lists",id:"rendering-lists",level:3},{value:"Key Best Practices",id:"key-best-practices",level:3},{value:"Forms and Controlled Components",id:"forms-and-controlled-components",level:2},{value:"Controlled Components",id:"controlled-components",level:3},{value:"Form Libraries",id:"form-libraries",level:3},{value:"Context API",id:"context-api",level:2},{value:"Creating Context",id:"creating-context",level:3},{value:"Consuming Context",id:"consuming-context",level:3},{value:"Performance Optimization",id:"performance-optimization",level:2},{value:"React.memo",id:"reactmemo",level:3},{value:"useMemo &amp; useCallback",id:"usememo--usecallback",level:3},{value:"Code Splitting",id:"code-splitting",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Error Boundaries",id:"error-boundaries",level:3},{value:"Error Handling Patterns",id:"error-handling-patterns",level:3},{value:"Testing",id:"testing",level:2},{value:"Testing Library",id:"testing-library",level:3},{value:"Testing Hooks",id:"testing-hooks",level:3},{value:"State Management",id:"state-management-1",level:2},{value:"Local State",id:"local-state",level:3},{value:"Global State Libraries",id:"global-state-libraries",level:3},{value:"Routing",id:"routing",level:2},{value:"React Router",id:"react-router",level:3},{value:"Navigation Patterns",id:"navigation-patterns",level:3},{value:"Best Practices &amp; Patterns",id:"best-practices--patterns",level:2},{value:"Component Composition",id:"component-composition",level:3},{value:"Custom Hooks",id:"custom-hooks",level:3},{value:"Folder Structure",id:"folder-structure",level:3},{value:"Example Repositories &amp; Resources",id:"example-repositories--resources",level:2},{value:"Official Examples",id:"official-examples",level:3},{value:"Production Examples",id:"production-examples",level:3},{value:"Learning Resources",id:"learning-resources",level:3},{value:"Component Libraries",id:"component-libraries",level:3},{value:"State Management",id:"state-management-2",level:3},{value:"Development Tools",id:"development-tools",level:3},{value:"Key Benefits",id:"key-benefits",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"react",children:"React"})}),"\n",(0,r.jsx)(n.h2,{id:"what-is-react",children:"What is React?"}),"\n",(0,r.jsx)(n.p,{children:"JavaScript library for building user interfaces through composable components. Manages UI state and efficiently updates the DOM when data changes."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://roadmap.sh/react",children:"Roadmap"})}),"\n",(0,r.jsx)(n.h2,{id:"why-react",children:"Why React?"}),"\n",(0,r.jsx)(n.h3,{id:"component-based-architecture",children:"Component-Based Architecture"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"What"}),": Build encapsulated components that manage their own state, then compose them to make complex UIs\n",(0,r.jsx)(n.strong,{children:"Why"}),": Reusable code, easier testing, better organization. Change one component without breaking others."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"// Reusable Button component\nfunction Button({ onClick, children }) {\n  return <button onClick={onClick}>{children}</button>;\n}\n\n// Use anywhere\n<Button onClick={handleSave}>Save</Button>\n<Button onClick={handleCancel}>Cancel</Button>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"declarative-ui",children:"Declarative UI"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"What"}),": Describe what the UI should look like for any given state, React figures out how to update it\n",(0,r.jsx)(n.strong,{children:"Why"}),": No manual DOM manipulation. Less bugs, more predictable code, easier to reason about."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Declarative - describe the end result\nfunction TodoList({ todos }) {\n  return (\n    <ul>\n      {todos.map((todo) => (\n        <li key={todo.id} className={todo.completed ? "done" : ""}>\n          {todo.text}\n        </li>\n      ))}\n    </ul>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"virtual-dom--performance",children:"Virtual DOM & Performance"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"What"}),": React creates a virtual representation of the DOM, calculates minimal changes needed\n",(0,r.jsx)(n.strong,{children:"Why"}),": Faster updates, smoother UIs. React optimizes rendering automatically - you focus on logic."]}),"\n",(0,r.jsx)(n.h3,{id:"rich-ecosystem",children:"Rich Ecosystem"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"What"}),": Massive ecosystem of libraries, tools, and community resources\n",(0,r.jsx)(n.strong,{children:"Why"}),": Solution exists for almost every problem. Learn once, use patterns everywhere."]}),"\n",(0,r.jsx)(n.h3,{id:"developer-experience",children:"Developer Experience"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"What"}),": Excellent debugging tools, hot reloading, helpful error messages\n",(0,r.jsx)(n.strong,{children:"Why"}),": Faster development cycles, easier debugging, better productivity."]}),"\n",(0,r.jsx)(n.h2,{id:"core-principles",children:"Core Principles"}),"\n",(0,r.jsx)(n.h3,{id:"components",children:"Components"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Function-based"})," components are the standard"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Props"})," pass data down from parent to child"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Composition"})," over inheritance"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Single responsibility"})," - each component does one thing well"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"state-management",children:"State Management"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Local state"})," for component-specific data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lifting state up"})," when multiple components need access"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"External libraries"})," for complex global state"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Immutable updates"})," prevent bugs and enable optimizations"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"unidirectional-data-flow",children:"Unidirectional Data Flow"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data flows down"})," via props"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Events flow up"})," via callback functions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Predictable"})," state changes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Easier debugging"})," and testing"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"fundamental-concepts",children:"Fundamental Concepts"}),"\n",(0,r.jsx)(n.h3,{id:"jsx",children:"JSX"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Write HTML-like syntax in JavaScript\n",(0,r.jsx)(n.strong,{children:"Benefit"}),": Familiar syntax, powerful JavaScript expressions, excellent tooling"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'function Welcome({ name, isLoggedIn }) {\n  return (\n    <div className="welcome">\n      <h1>Hello, {name}!</h1>\n      {isLoggedIn && <p>Welcome back!</p>}\n    </div>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"JSX compiles to JavaScript function calls. className instead of class, onClick instead of onclick."})}),"\n",(0,r.jsx)(n.h3,{id:"components-1",children:"Components"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Reusable pieces of UI with their own logic and state\n",(0,r.jsx)(n.strong,{children:"Benefit"}),": Modular code, easier testing, better organization"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Function component (preferred)\nfunction UserCard({ user, onEdit }) {\n  return (\n    <div className="user-card">\n      <img src={user.avatar} alt={user.name} />\n      <h3>{user.name}</h3>\n      <button onClick={() => onEdit(user.id)}>Edit</button>\n    </div>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Components are just functions that return JSX. Props come in as function arguments."})}),"\n",(0,r.jsx)(n.h3,{id:"props",children:"Props"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Pass data and functions from parent to child components\n",(0,r.jsx)(n.strong,{children:"Benefit"}),": Component communication, data flow control, reusability"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Parent passes data down\nfunction App() {\n  const user = { id: 1, name: "John", avatar: "/john.jpg" };\n\n  return <UserCard user={user} onEdit={handleEdit} />;\n}\n\n// Child receives via props\nfunction UserCard({ user, onEdit }) {\n  return <button onClick={() => onEdit(user.id)}>{user.name}</button>;\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Props are read-only. Children cannot modify props directly."})}),"\n",(0,r.jsx)(n.h3,{id:"state",children:"State"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Manage data that changes over time within a component\n",(0,r.jsx)(n.strong,{children:"Benefit"}),": Reactive UI updates, encapsulated component data"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { useState } from "react";\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={() => setCount(count + 1)}>+</button>\n    </div>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"useState returns current value and setter function. Calling setter triggers re-render."})}),"\n",(0,r.jsx)(n.h2,{id:"essential-hooks",children:"Essential Hooks"}),"\n",(0,r.jsx)(n.h3,{id:"usestate",children:"useState"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Add state to function components\n",(0,r.jsx)(n.strong,{children:"When"}),": Component needs to remember data between renders"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'const [value, setValue] = useState(initialValue);\nconst [user, setUser] = useState({ name: "", email: "" });\nconst [items, setItems] = useState([]);\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["Always use functional updates for state based on previous state: ",(0,r.jsx)(n.code,{children:"setCount(prev => prev + 1)"})]})}),"\n",(0,r.jsx)(n.h3,{id:"useeffect",children:"useEffect"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://react.dev/reference/react/useEffect#fetching-data-with-effects",children:"Fetchin data"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Perform side effects (API calls, subscriptions, timers)\n",(0,r.jsx)(n.strong,{children:"When"}),": Need to interact with outside world or React lifecycle"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"useEffect(() => {\n  // Effect runs after render\n  fetchUserData().then(setUser);\n\n  // Cleanup function (optional)\n  return () => {\n    cancelRequest();\n  };\n}, [userId]); // Dependencies - re-run when userId changes\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["Empty dependency array ",(0,r.jsx)(n.code,{children:"[]"})," means run once. No array means run every render."]})}),"\n",(0,r.jsx)(n.h3,{id:"usecontext",children:"useContext"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Access context values without prop drilling\n",(0,r.jsx)(n.strong,{children:"When"}),": Data needed by many components at different nesting levels"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const theme = useContext(ThemeContext);\nconst user = useContext(UserContext);\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Alternative to passing props through many component layers."})}),"\n",(0,r.jsx)(n.h3,{id:"useref",children:"useRef"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Access DOM elements directly or persist values between renders\n",(0,r.jsx)(n.strong,{children:"When"}),": Focus management, animations, integrating with non-React libraries"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const inputRef = useRef(null);\nconst countRef = useRef(0); // Doesn't trigger re-renders\n\nuseEffect(() => {\n  inputRef.current.focus();\n}, []);\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"ref.current gives you direct DOM access. Changes don't trigger re-renders."})}),"\n",(0,r.jsx)(n.h3,{id:"usememo",children:"useMemo"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Memoize expensive calculations\n",(0,r.jsx)(n.strong,{children:"When"}),": Expensive computations that don't need to run every render"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const expensiveValue = useMemo(() => {\n  return heavyCalculation(data);\n}, [data]);\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Only recalculates when dependencies change. Don't overuse - measuring is key."})}),"\n",(0,r.jsx)(n.h3,{id:"usecallback",children:"useCallback"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Memoize functions to prevent unnecessary re-renders\n",(0,r.jsx)(n.strong,{children:"When"}),": Passing callbacks to optimized child components"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const handleClick = useCallback((id) => {\n  setItems((items) => items.filter((item) => item.id !== id));\n}, []);\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Prevents child components from re-rendering when parent re-renders."})}),"\n",(0,r.jsx)(n.h2,{id:"event-handling",children:"Event Handling"}),"\n",(0,r.jsx)(n.h3,{id:"synthetic-events",children:"Synthetic Events"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Cross-browser event wrapper with consistent API\n",(0,r.jsx)(n.strong,{children:"Benefit"}),": Same event object properties across all browsers"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"function Button({ onClick }) {\n  const handleClick = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    onClick(event.target.value);\n  };\n\n  return <button onClick={handleClick}>Click me</button>;\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["SyntheticEvent wraps native events. Access native event via ",(0,r.jsx)(n.code,{children:"event.nativeEvent"}),"."]})}),"\n",(0,r.jsx)(n.h3,{id:"event-delegation",children:"Event Delegation"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": React automatically delegates events to document root\n",(0,r.jsx)(n.strong,{children:"Benefit"}),": Better performance, consistent behavior"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"// React handles delegation automatically\nfunction TodoList({ todos, onToggle }) {\n  return (\n    <ul>\n      {todos.map((todo) => (\n        <li key={todo.id} onClick={() => onToggle(todo.id)}>\n          {todo.text}\n        </li>\n      ))}\n    </ul>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Don't manually add/remove event listeners. Use React's event props."})}),"\n",(0,r.jsx)(n.h2,{id:"conditional-rendering",children:"Conditional Rendering"}),"\n",(0,r.jsx)(n.h3,{id:"boolean-conditions",children:"Boolean Conditions"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Show/hide elements based on state\n",(0,r.jsx)(n.strong,{children:"Pattern"}),": Use logical AND for simple conditions"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"function UserProfile({ user, isLoggedIn }) {\n  return (\n    <div>\n      {isLoggedIn && <WelcomeMessage />}\n      {user.isAdmin && <AdminPanel />}\n      {!user.verified && <VerificationBanner />}\n    </div>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:[(0,r.jsx)(n.code,{children:"condition && <Component />"})," renders Component only if condition is truthy."]})}),"\n",(0,r.jsx)(n.h3,{id:"ternary-operator",children:"Ternary Operator"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Choose between two different elements\n",(0,r.jsx)(n.strong,{children:"Pattern"}),": Use for either/or scenarios"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'function LoginButton({ isLoggedIn, onLogin, onLogout }) {\n  return (\n    <button onClick={isLoggedIn ? onLogout : onLogin}>\n      {isLoggedIn ? "Logout" : "Login"}\n    </button>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:[(0,r.jsx)(n.code,{children:"condition ? <A /> : <B />"})," renders A if true, B if false."]})}),"\n",(0,r.jsx)(n.h2,{id:"lists-and-keys",children:"Lists and Keys"}),"\n",(0,r.jsx)(n.h3,{id:"rendering-lists",children:"Rendering Lists"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Display dynamic collections of data\n",(0,r.jsx)(n.strong,{children:"Requirement"}),": Each item must have unique key prop"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"function ProductList({ products }) {\n  return (\n    <div>\n      {products.map((product) => (\n        <ProductCard key={product.id} product={product} />\n      ))}\n    </div>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Keys help React identify which items changed, added, or removed."})}),"\n",(0,r.jsx)(n.h3,{id:"key-best-practices",children:"Key Best Practices"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Optimize list updates and prevent bugs\n",(0,r.jsx)(n.strong,{children:"Rules"}),": Use stable, unique identifiers - not array indices"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"// \u2705 Good - stable unique ID\n{\n  users.map((user) => <User key={user.id} user={user} />);\n}\n\n// \u274c Bad - array index can cause bugs\n{\n  users.map((user, index) => <User key={index} user={user} />);\n}\n\n// \u274c Bad - not unique\n{\n  users.map((user) => <User key={user.name} user={user} />);\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Wrong keys can cause components to retain old state or render incorrectly."})}),"\n",(0,r.jsx)(n.h2,{id:"forms-and-controlled-components",children:"Forms and Controlled Components"}),"\n",(0,r.jsx)(n.h3,{id:"controlled-components",children:"Controlled Components"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Form inputs controlled by React state\n",(0,r.jsx)(n.strong,{children:"Benefit"}),": Single source of truth, validation, programmatic control"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'function ContactForm() {\n  const [form, setForm] = useState({ name: "", email: "" });\n\n  const handleChange = (field) => (e) => {\n    setForm((prev) => ({ ...prev, [field]: e.target.value }));\n  };\n\n  return (\n    <form>\n      <input value={form.name} onChange={handleChange("name")} />\n      <input value={form.email} onChange={handleChange("email")} />\n    </form>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"React state drives input values. Changes update state, which updates inputs."})}),"\n",(0,r.jsx)(n.h3,{id:"form-libraries",children:"Form Libraries"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Handle complex forms with validation\n",(0,r.jsx)(n.strong,{children:"When"}),": Multi-step forms, complex validation, better UX"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { useForm } from "react-hook-form";\n\nfunction SignupForm() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input {...register("email", { required: true })} />\n      {errors.email && <span>Email required</span>}\n    </form>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Libraries like React Hook Form, Formik reduce boilerplate and add features."})}),"\n",(0,r.jsx)(n.h2,{id:"context-api",children:"Context API"}),"\n",(0,r.jsx)(n.h3,{id:"creating-context",children:"Creating Context"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Share data without prop drilling\n",(0,r.jsx)(n.strong,{children:"When"}),": Theme, auth state, language settings"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'const ThemeContext = createContext("light");\n\nfunction App() {\n  const [theme, setTheme] = useState("dark");\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      <Header />\n      <Main />\n    </ThemeContext.Provider>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Provider makes values available to all descendant components."})}),"\n",(0,r.jsx)(n.h3,{id:"consuming-context",children:"Consuming Context"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Access context values in components\n",(0,r.jsx)(n.strong,{children:"Pattern"}),": Use useContext hook in function components"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'function Header() {\n  const { theme, setTheme } = useContext(ThemeContext);\n\n  return (\n    <header className={theme}>\n      <button onClick={() => setTheme(theme === "light" ? "dark" : "light")}>\n        Toggle theme\n      </button>\n    </header>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Any component in the provider tree can access context values."})}),"\n",(0,r.jsx)(n.h2,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,r.jsx)(n.h3,{id:"reactmemo",children:"React.memo"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Prevent unnecessary re-renders of components\n",(0,r.jsx)(n.strong,{children:"When"}),": Component renders often with same props"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const ExpensiveComponent = React.memo(({ data, onUpdate }) => {\n  return <ComplexVisualization data={data} onUpdate={onUpdate} />;\n});\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Shallow compares props. Only re-renders if props actually changed."})}),"\n",(0,r.jsx)(n.h3,{id:"usememo--usecallback",children:"useMemo & useCallback"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Memoize values and functions\n",(0,r.jsx)(n.strong,{children:"When"}),": Expensive calculations or preventing child re-renders"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"function DataTable({ items, sortBy }) {\n  const sortedItems = useMemo(() => {\n    return [...items].sort((a, b) => (a[sortBy] > b[sortBy] ? 1 : -1));\n  }, [items, sortBy]);\n\n  const handleSort = useCallback((column) => {\n    setSortBy(column);\n  }, []);\n\n  return <Table items={sortedItems} onSort={handleSort} />;\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Measure before optimizing. Not all components need memoization."})}),"\n",(0,r.jsx)(n.h3,{id:"code-splitting",children:"Code Splitting"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Load components only when needed\n",(0,r.jsx)(n.strong,{children:"Benefit"}),": Smaller initial bundle, faster app startup"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { lazy, Suspense } from "react";\n\nconst AdminPanel = lazy(() => import("./AdminPanel"));\n\nfunction App() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      {isAdmin && <AdminPanel />}\n    </Suspense>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Lazy loading reduces initial bundle size. Great for admin panels, complex features."})}),"\n",(0,r.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.h3,{id:"error-boundaries",children:"Error Boundaries"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Catch JavaScript errors in component tree\n",(0,r.jsx)(n.strong,{children:"Benefit"}),": Graceful error handling, better user experience"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n\n// Usage\n<ErrorBoundary>\n  <App />\n</ErrorBoundary>;\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Error boundaries only catch errors in child components, not in themselves."})}),"\n",(0,r.jsx)(n.h3,{id:"error-handling-patterns",children:"Error Handling Patterns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Handle async errors and edge cases\n",(0,r.jsx)(n.strong,{children:"Pattern"}),": Try-catch with async/await, error states"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"function UserProfile({ userId }) {\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchUser() {\n      try {\n        const userData = await api.getUser(userId);\n        setUser(userData);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchUser();\n  }, [userId]);\n\n  if (loading) return <Spinner />;\n  if (error) return <ErrorMessage error={error} />;\n  return <UserCard user={user} />;\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Always handle loading, error, and success states for async operations."})}),"\n",(0,r.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,r.jsx)(n.h3,{id:"testing-library",children:"Testing Library"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Test components like users interact with them\n",(0,r.jsx)(n.strong,{children:"Philosophy"}),": Test behavior, not implementation details"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { render, screen, fireEvent } from "@testing-library/react";\n\ntest("counter increments when button clicked", () => {\n  render(<Counter />);\n\n  const button = screen.getByRole("button", { name: /increment/i });\n  const count = screen.getByText(/count: 0/i);\n\n  fireEvent.click(button);\n\n  expect(screen.getByText(/count: 1/i)).toBeInTheDocument();\n});\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Query by text users see, not by implementation details like CSS classes."})}),"\n",(0,r.jsx)(n.h3,{id:"testing-hooks",children:"Testing Hooks"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Test custom hooks in isolation\n",(0,r.jsx)(n.strong,{children:"Tool"}),": @testing-library/react-hooks"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { renderHook, act } from "@testing-library/react";\n\ntest("useCounter hook", () => {\n  const { result } = renderHook(() => useCounter(0));\n\n  expect(result.current.count).toBe(0);\n\n  act(() => {\n    result.current.increment();\n  });\n\n  expect(result.current.count).toBe(1);\n});\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Test hooks behavior independently of components."})}),"\n",(0,r.jsx)(n.h2,{id:"state-management-1",children:"State Management"}),"\n",(0,r.jsx)(n.h3,{id:"local-state",children:"Local State"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"When"}),": Data only needed by one component or its children\n",(0,r.jsx)(n.strong,{children:"Pattern"}),": useState, useReducer for complex state"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"function ShoppingCart() {\n  const [items, setItems] = useState([]);\n\n  const addItem = (product) => {\n    setItems((prev) => [...prev, { ...product, id: Date.now() }]);\n  };\n\n  return <CartView items={items} onAddItem={addItem} />;\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Start with local state. Lift up only when multiple components need access."})}),"\n",(0,r.jsx)(n.h3,{id:"global-state-libraries",children:"Global State Libraries"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"When"}),": State needed across many components, complex updates\n",(0,r.jsx)(n.strong,{children:"Options"}),": Redux Toolkit, Zustand, Valtio, Context + useReducer"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Redux Toolkit\nimport { createSlice } from "@reduxjs/toolkit";\n\nconst userSlice = createSlice({\n  name: "user",\n  initialState: { data: null, loading: false },\n  reducers: {\n    setUser: (state, action) => {\n      state.data = action.payload;\n    },\n  },\n});\n\n// Zustand (simpler alternative)\nimport { create } from "zustand";\n\nconst useStore = create((set) => ({\n  user: null,\n  setUser: (user) => set({ user }),\n}));\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Redux for complex apps, Zustand for simpler state management."})}),"\n",(0,r.jsx)(n.h2,{id:"routing",children:"Routing"}),"\n",(0,r.jsx)(n.h3,{id:"react-router",children:"React Router"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Client-side routing for single-page applications\n",(0,r.jsx)(n.strong,{children:"Benefit"}),": Multiple pages, URL synchronization, navigation"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { BrowserRouter, Routes, Route, Link } from "react-router-dom";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <nav>\n        <Link to="/">Home</Link>\n        <Link to="/about">About</Link>\n      </nav>\n\n      <Routes>\n        <Route path="/" element={<Home />} />\n        <Route path="/about" element={<About />} />\n        <Route path="/users/:id" element={<UserProfile />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Declarative routing with URL parameters, query strings, and nested routes."})}),"\n",(0,r.jsx)(n.h3,{id:"navigation-patterns",children:"Navigation Patterns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Programmatic navigation and route protection\n",(0,r.jsx)(n.strong,{children:"Pattern"}),": useNavigate hook, route guards"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { useNavigate, useParams } from "react-router-dom";\n\nfunction UserProfile() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const handleSave = () => {\n    saveUser(id).then(() => {\n      navigate("/users");\n    });\n  };\n\n  return <ProfileForm onSave={handleSave} />;\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Access route params and navigate programmatically."})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices--patterns",children:"Best Practices & Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"component-composition",children:"Component Composition"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Pattern"}),": Combine simple components to build complex UIs\n",(0,r.jsx)(n.strong,{children:"Benefit"}),": Reusability, flexibility, easier testing"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Flexible card component\nfunction Card({ children, title, actions }) {\n  return (\n    <div className="card">\n      <header>{title}</header>\n      <main>{children}</main>\n      <footer>{actions}</footer>\n    </div>\n  );\n}\n\n// Usage\n<Card title="User Profile" actions={<Button>Edit</Button>}>\n  <UserInfo user={user} />\n</Card>;\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Composition over configuration. Accept children and specific props."})}),"\n",(0,r.jsx)(n.h3,{id:"custom-hooks",children:"Custom Hooks"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Pattern"}),": Extract component logic into reusable hooks\n",(0,r.jsx)(n.strong,{children:"Benefit"}),": Logic reuse, easier testing, cleaner components"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'function useApi(url) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch(url)\n      .then((res) => res.json())\n      .then(setData)\n      .catch(setError)\n      .finally(() => setLoading(false));\n  }, [url]);\n\n  return { data, loading, error };\n}\n\n// Usage in components\nfunction UserList() {\n  const { data: users, loading, error } = useApi("/api/users");\n  // Component logic here\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Extract stateful logic into custom hooks for reuse across components."})}),"\n",(0,r.jsx)(n.h3,{id:"folder-structure",children:"Folder Structure"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Organize code for maintainability and scalability\n",(0,r.jsx)(n.strong,{children:"Pattern"}),": Group by feature or by file type"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"src/\n\u251c\u2500\u2500 components/          # Reusable UI components\n\u2502   \u251c\u2500\u2500 Button/\n\u2502   \u2502   \u251c\u2500\u2500 index.js\n\u2502   \u2502   \u251c\u2500\u2500 Button.test.js\n\u2502   \u2502   \u2514\u2500\u2500 Button.css\n\u2502   \u2514\u2500\u2500 Modal/\n\u251c\u2500\u2500 pages/              # Route components\n\u2502   \u251c\u2500\u2500 Home/\n\u2502   \u251c\u2500\u2500 UserProfile/\n\u2502   \u2514\u2500\u2500 Settings/\n\u251c\u2500\u2500 hooks/              # Custom hooks\n\u2502   \u251c\u2500\u2500 useApi.js\n\u2502   \u2514\u2500\u2500 useAuth.js\n\u251c\u2500\u2500 context/            # Context providers\n\u251c\u2500\u2500 utils/              # Helper functions\n\u2514\u2500\u2500 App.js\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Start simple, refactor as app grows. Colocation often beats premature abstraction."})}),"\n",(0,r.jsx)(n.h2,{id:"example-repositories--resources",children:"Example Repositories & Resources"}),"\n",(0,r.jsx)(n.h3,{id:"official-examples",children:"Official Examples"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/facebook/react/tree/main/fixtures",children:(0,r.jsx)(n.strong,{children:"React Examples"})})," - Official React team examples"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/facebook/create-react-app",children:(0,r.jsx)(n.strong,{children:"Create React App"})})," - Zero-config React setup"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/facebook/react/tree/main/packages/react-devtools",children:(0,r.jsx)(n.strong,{children:"React DevTools"})})," - Essential debugging tools"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"production-examples",children:"Production Examples"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/calcom/cal.com",children:(0,r.jsx)(n.strong,{children:"Cal.com"})})," - Scheduling infrastructure built with Next.js, tRPC, Prisma"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/alan2207/bulletproof-react",children:(0,r.jsx)(n.strong,{children:"Bulletproof React"})})," - Production-ready React architecture guide with sample app"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/gothinkster/react-redux-realworld-example-app",children:(0,r.jsx)(n.strong,{children:"RealWorld React Redux"})})," - Medium clone with React + Redux"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/angelguzmaning/ts-redux-react-realworld-example-app",children:(0,r.jsx)(n.strong,{children:"RealWorld TypeScript"})})," - TypeScript + Redux Toolkit version"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"learning-resources",children:"Learning Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/chantastic/react-patterns",children:(0,r.jsx)(n.strong,{children:"React Patterns"})})," - Common React patterns and techniques"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/30-seconds/30-seconds-of-react",children:(0,r.jsx)(n.strong,{children:"30 seconds of React"})})," - Useful React snippets"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/typescript-cheatsheets/react",children:(0,r.jsx)(n.strong,{children:"React TypeScript Cheatsheets"})})," - TypeScript + React patterns"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/enaqx/awesome-react",children:(0,r.jsx)(n.strong,{children:"Awesome React"})})," - Curated list of React resources"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://roadmap.sh/react",children:(0,r.jsx)(n.strong,{children:"React Roadmap"})})," - Step-by-step learning path for React developers"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"component-libraries",children:"Component Libraries"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://mui.com/",children:(0,r.jsx)(n.strong,{children:"Material-UI (MUI)"})})," - Google Material Design components"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://ant.design/",children:(0,r.jsx)(n.strong,{children:"Ant Design"})})," - Enterprise UI language"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://chakra-ui.com/",children:(0,r.jsx)(n.strong,{children:"Chakra UI"})})," - Simple, modular components"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://react-bootstrap.github.io/",children:(0,r.jsx)(n.strong,{children:"React Bootstrap"})})," - Bootstrap components for React"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://headlessui.com/",children:(0,r.jsx)(n.strong,{children:"Headless UI"})})," - Unstyled, accessible components"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"state-management-2",children:"State Management"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/av-docs/docs/frontend/react/state-management/redux",children:(0,r.jsx)(n.strong,{children:"Redux"})})," - Redux toolkit"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/av-docs/docs/frontend/react/state-management/recoil",children:(0,r.jsx)(n.strong,{children:"Recoil"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/av-docs/docs/frontend/react/state-management/xstate",children:(0,r.jsx)(n.strong,{children:"XState"})})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/av-docs/docs/frontend/react/state-management/apollo-client",children:(0,r.jsx)(n.strong,{children:"Apollo Client"})})," - GraphQL Client"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/pmndrs/zustand",children:(0,r.jsx)(n.strong,{children:"Zustand"})})," - Lightweight state management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/av-docs/docs/frontend/react/state-management/react-query",children:(0,r.jsx)(n.strong,{children:"React Query"})})," - Server state management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://swr.vercel.app/",children:(0,r.jsx)(n.strong,{children:"SWR"})})," - Data fetching with caching"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"development-tools",children:"Development Tools"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://storybook.js.org/",children:(0,r.jsx)(n.strong,{children:"Storybook"})})," - Component development environment"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://testing-library.com/react",children:(0,r.jsx)(n.strong,{children:"React Testing Library"})})," - Testing utilities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://react-hook-form.com/",children:(0,r.jsx)(n.strong,{children:"React Hook Form"})})," - Forms with minimal re-renders"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.framer.com/motion/",children:(0,r.jsx)(n.strong,{children:"Framer Motion"})})," - Animation library"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"key-benefits",children:"Key Benefits"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83e\udde9 Component-Based"}),": Reusable, testable, maintainable UI pieces"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udcdd Declarative"}),": Describe what you want, React handles how to achieve it"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\u26a1 Performance"}),": Virtual DOM and built-in optimizations for smooth UIs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udee0\ufe0f Developer Experience"}),": Excellent tooling, debugging, and error messages"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83c\udf0d Ecosystem"}),": Massive community, libraries for every use case"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83d\udcf1 Cross-Platform"}),": React Native for mobile, Next.js for SSR, Electron for desktop"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(6540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);